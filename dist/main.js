(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>g});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),d=t(667),c=t.n(d),s=new URL(t(605),t.b),l=new URL(t(618),t.b),A=new URL(t(601),t.b),u=i()(r()),p=c()(s),m=c()(l),f=c()(A);u.push([n.id,"@font-face{\n    font-family: My-Goth-Font;\n    src: url("+p+");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("+m+");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("+f+');\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/4;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    padding: 1vw;\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.ProjectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.ProjectItem{\n    font-size: 0.8em;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,4CAAuD;AAC3D;AACA;IACI,+BAA+B;IAC/B,4CAAoD;AACxD;;AAEA;IACI,qCAAqC;IACrC,4CAAyD;AAC7D;;AAEA;;IAEI,iCAAiC;IACjC,YAAY;IACZ,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,UAAU;;AAEd;AACA;;IAEI,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,+BAA+B;;IAE/B,SAAS;IACT,kBAAkB;;;AAGtB;;AAEA;;IAEI,gBAAgB;;AAEpB;;AAEA;;AAEA,gBAAgB;;AAEhB;;AAEA;;IAEI,YAAY;;AAEhB;;AAEA;;IAEI,YAAY;IACZ,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;;AAE7B;;AAEA;;IAEI,yBAAyB;;AAE7B;AACA;IACI,gBAAgB;AACpB;;AAEA;;AAEA,UAAU;AACV,YAAY;AACZ,aAAa;AACb,kCAAkC;AAClC,UAAU;AACV,iCAAiC;;AAEjC;;AAEA;;IAEI,6BAA6B;IAC7B,+BAA+B;AACnC",sourcesContent:['@font-face{\n    font-family: My-Goth-Font;\n    src: url("../src/Nanum_Gothic/NanumGothic-Regular.ttf");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-Bold.ttf");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-ExtraBold.ttf");\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/4;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    padding: 1vw;\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.ProjectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.ProjectItem{\n    font-size: 0.8em;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}'],sourceRoot:""}]);const g=u},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],d=0;d<n.length;d++){var c=n[d],s=o.base?c[0]+o.base:c[0],l=a[s]||0,A="".concat(s," ").concat(l);a[s]=l+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=d,e.splice(d,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var d=t(a[i]);e[d].references--}for(var c=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},618:(n,e,t)=>{n.exports=t.p+"6499af72b1d61fe8269d.ttf"},601:(n,e,t)=>{n.exports=t.p+"d574713406e9230ba246.ttf"},605:(n,e,t)=>{n.exports=t.p+"6c84540de7730f833d6c.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),d=t(565),c=t.n(d),s=t(216),l=t.n(s),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=[];function g(n){const e=f.findIndex((e=>e.title==n));f.splice(e,1)}function h(n,e){if(0===e.length){const e=document.createElement("h3");e.textContent="You have nothing to do yet! Add a task!",n.appendChild(e)}else for(let t=0;t<e.length;t++){const o=document.createElement("div"),r=e[t].title;o.classList.add("toDoDispDiv"),o.setAttribute("id",r);const a=document.createElement("div"),i=document.createElement("div");e[t].dueDate===(new Date).toISOString().substring(0,10)?a.textContent="today:":a.textContent=`${e[t].dueDate}:`,a.textContent+=` ${e[t].title} priorty: ${e[t].priorty}`,"00:00"!==e[t].dueTime&&(a.textContent+=`_____due by: ${e[t].dueTime} o'clock`),i.textContent=`   Additional notes: ${e[t].notes}`;const d=document.createElement("button");d.classList.add("questComplete"),d.setAttribute("id",`${e[t].title}`);const c=document.createElement("img");c.src="./check-outline.png",d.appendChild(c);const s=document.createElement("button");s.classList.add("questdelete"),s.setAttribute("id",`${e[t].title}`);const l=document.createElement("img");l.src="./file-document-remove.png",s.appendChild(l),o.appendChild(a),o.appendChild(d),o.appendChild(s),o.appendChild(i),n.appendChild(o),d.addEventListener("click",(()=>{o.classList.add("clearedTask")})),s.addEventListener("click",(()=>{g(r),n.removeChild(o)}))}}function v(n){for(;n.firstChild;)n.removeChild(n.lastChild)}function C(n,e,t){const o=document.createElement("label");o.setAttribute("for",n),o.textContent=e,t.appendChild(o)}let y=0;const b=document.querySelector(".mainDisplay"),B=document.querySelector(".addToDos");h(b,f),B.addEventListener("click",(()=>{0===y&&(y++,function(n){const e=document.createElement("div");e.classList.add("displayForm"),C("title"," New Task:",e);const t=document.createElement("input");t.type="text",t.setAttribute("id","title"),t.name="title",e.appendChild(t),C("priorty"," select a level of priorty:",e);const o=document.createElement("select");o.setAttribute("id","priorty");const r=new Option("High","high"),a=new Option("Medium","medium"),i=new Option("Low","low");o.add(i,void 0),o.add(a,void 0),o.add(r,void 0),e.appendChild(o),C("dueDate"," Due Date: ",e);const d=document.createElement("input");d.type="date",d.setAttribute("id","dueDate"),d.name="dueDate",d.value=(new Date).toISOString().substring(0,10),d.setAttribute("min",(new Date).toISOString().substring(0,10)),e.appendChild(d),C("dueTime","Due time:",e);const c=document.createElement("input");c.type="time",c.setAttribute("id","dueTime"),c.name="dueTime",c.defaultValue="00:00",e.appendChild(c),C("notes"," Additional notes: ",e);const s=document.createElement("textarea");s.setAttribute("id","notes"),s.setAttribute("name","notes"),s.setAttribute("rows",2),s.setAttribute("cols",50),s.value=" ",e.appendChild(s);const l=document.createElement("button");l.textContent="Add",l.type="button",l.classList.add("submissionButton"),e.appendChild(l),n.appendChild(e)}(b)),document.querySelector(".submissionButton").addEventListener("click",(()=>{document.getElementById("title").value?(" "===document.getElementById("notes").value&&(document.getElementById("notes").value="none"),function(n,e,t,o,r){const a=((n,e,t,o,r)=>({title:n,priorty:e,notes:t,dueDate:o,dueTime:r}))(document.getElementById("title").value,document.getElementById("priorty").value,document.getElementById("notes").value,document.getElementById("dueDate").value,document.getElementById("dueTime").value);f.push(a)}(),v(b),h(b,f),y=0):alert("please enter a task")}))})),document.querySelectorAll(".sidebarItem").forEach((n=>n.addEventListener("click",(()=>{"activeGoals"===n.id?(v(b),h(b,f)):console.log("hello")}))))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,