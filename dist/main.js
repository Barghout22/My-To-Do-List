(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>g});var o=n(537),r=n.n(o),i=n(645),a=n.n(i),d=n(667),c=n.n(d),s=new URL(n(605),n.b),l=new URL(n(618),n.b),A=new URL(n(601),n.b),u=a()(r()),p=c()(s),m=c()(l),f=c()(A);u.push([e.id,"@font-face{\n    font-family: My-Goth-Font;\n    src: url("+p+");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("+m+");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("+f+');\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/5;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.projectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.projectItem{\n    font-size: 0.8em;\n    padding: 1vw;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}\n\n.projectAdditiondiv\n{\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    gap: 1vw;\n    margin: 2vh;\n    text-align: center;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,4CAAuD;AAC3D;AACA;IACI,+BAA+B;IAC/B,4CAAoD;AACxD;;AAEA;IACI,qCAAqC;IACrC,4CAAyD;AAC7D;;AAEA;;IAEI,iCAAiC;IACjC,YAAY;IACZ,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,UAAU;;AAEd;AACA;;IAEI,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,+BAA+B;;IAE/B,SAAS;IACT,kBAAkB;;;AAGtB;;AAEA;;IAEI,gBAAgB;;AAEpB;;AAEA;;AAEA,gBAAgB;;AAEhB;;AAEA;;IAEI,YAAY;;AAEhB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;;AAE7B;;AAEA;;IAEI,yBAAyB;;AAE7B;AACA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;;AAEA,UAAU;AACV,YAAY;AACZ,aAAa;AACb,kCAAkC;AAClC,UAAU;AACV,iCAAiC;;AAEjC;;AAEA;;IAEI,6BAA6B;IAC7B,+BAA+B;AACnC;;AAEA;;IAEI,UAAU;IACV,aAAa;IACb,kCAAkC;IAClC,QAAQ;IACR,WAAW;IACX,kBAAkB;AACtB",sourcesContent:['@font-face{\n    font-family: My-Goth-Font;\n    src: url("../src/Nanum_Gothic/NanumGothic-Regular.ttf");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-Bold.ttf");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-ExtraBold.ttf");\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/5;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.projectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.projectItem{\n    font-size: 0.8em;\n    padding: 1vw;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}\n\n.projectAdditiondiv\n{\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    gap: 1vw;\n    margin: 2vh;\n    text-align: center;\n}'],sourceRoot:""}]);const g=u},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var u=n(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=d,t.splice(d,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=n(i[a]);t[d].references--}for(var c=o(e,r),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},618:(e,t,n)=>{e.exports=n.p+"6499af72b1d61fe8269d.ttf"},601:(e,t,n)=>{e.exports=n.p+"d574713406e9230ba246.ttf"},605:(e,t,n)=>{e.exports=n.p+"6c84540de7730f833d6c.ttf"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0;var o={};(()=>{n.d(o,{Z:()=>w});var e=n(379),t=n.n(e),r=n(795),i=n.n(r),a=n(569),d=n.n(a),c=n(565),s=n.n(c),l=n(216),A=n.n(l),u=n(589),p=n.n(u),m=n(426),f={};f.styleTagTransform=p(),f.setAttributes=s(),f.insert=d().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=A(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const g=[];function h(e){const t=g.findIndex((t=>t.title==e));g.splice(t,1)}const v=[];function C(e,t){return e.dueDate<t.dueDate?-1:e.dueDate>t.dueDate?1:"high"===e.priorty&&"low"===t.priorty?-1:"low"===e.priorty&&"high"===t.priorty?1:0}let y=0;function b(e,t){if(0===t.length){const t=document.createElement("h3");t.textContent="You have nothing to do yet! Add a task!",e.appendChild(t)}else for(let n=0;n<t.length;n++){const o=document.createElement("div"),r=t[n].title;o.classList.add("toDoDispDiv"),o.setAttribute("id",r);const i=document.createElement("div"),a=document.createElement("div");t[n].dueDate===(new Date).toISOString().substring(0,10)?i.textContent="today:":i.textContent=`${t[n].dueDate}:`,i.textContent+=` ${t[n].title} priorty: ${t[n].priorty}`,"00:00"!==t[n].dueTime&&(i.textContent+=` due by: ${t[n].dueTime} o'clock`),a.textContent=`   Additional notes: ${t[n].notes}`;const d=document.createElement("button");d.classList.add("questComplete"),d.setAttribute("id",`${t[n].title}`);const c=document.createElement("img");c.src="./check-outline.png",d.appendChild(c);const s=document.createElement("button");s.classList.add("questdelete"),s.setAttribute("id",`${t[n].title}`);const l=document.createElement("img");l.src="./file-document-remove.png",s.appendChild(l),o.appendChild(i),o.appendChild(d),o.appendChild(s),o.appendChild(a),e.appendChild(o),d.addEventListener("click",(()=>{o.classList.add("clearedTask")})),s.addEventListener("click",(()=>{h(r),e.removeChild(o)}))}}function I(e){for(;e.firstChild;)e.removeChild(e.lastChild)}function B(e,t,n){const o=document.createElement("label");o.setAttribute("for",e),o.textContent=t,n.appendChild(o)}function E(e,t,n){if(I(t),0!==e.length)for(let o=0;o<e.length;o++){const r=document.createElement("li");r.classList.add("projectItem"),r.setAttribute("id",e[o]),r.textContent=e[o],t.appendChild(r),r.addEventListener("click",(()=>{w=0,y=0;const e=(t=r.id,g.filter((e=>e.project===t)));var t;I(n),b(n,e)}))}const o=document.createElement("li");o.classList.add("projectItem"),o.classList.add("sidebarItem"),o.setAttribute("id","projectAddition"),o.textContent="Add new Project  +",t.appendChild(o),o.addEventListener("click",(()=>{!function(e,t,n){if(0==y){y++;const o=document.createElement("div");o.classList.add("projectAdditiondiv"),B("newProject","new project:",o);const r=document.createElement("input");r.type="text",r.setAttribute("id","newProject"),r.name="newProject",r.value=" ",o.appendChild(r);const i=document.createElement("button");i.textContent="Add",i.type="button",i.classList.add("addingProjectBtn"),o.appendChild(i),t.appendChild(o),i.addEventListener("click",(()=>{" "===r.value?alert("please enter a name for the new project"):(e.push(r.value),y=0,E(e,n,t),t.removeChild(o))}))}}(e,n,t)}))}let w=0;const x=document.querySelector(".mainDisplay"),D=document.querySelector(".addToDos"),j=document.querySelector(".projectList");E(v,j),b(x,g),D.addEventListener("click",(()=>{0===w&&(w++,function(e,t){const n=document.createElement("div");n.classList.add("displayForm"),B("title"," New Task:",n);const o=document.createElement("input");o.type="text",o.setAttribute("id","title"),o.name="title",n.appendChild(o),B("priorty"," select a level of priorty:",n);const r=document.createElement("select");r.setAttribute("id","priorty");const i=new Option("High","high"),a=new Option("Low","low");r.add(a,void 0),r.add(i,void 0),n.appendChild(r),B("dueDate"," Due Date: ",n);const d=document.createElement("input");d.type="date",d.setAttribute("id","dueDate"),d.name="dueDate",d.value=(new Date).toISOString().substring(0,10),d.setAttribute("min",(new Date).toISOString().substring(0,10)),n.appendChild(d),B("dueTime","Due time:",n);const c=document.createElement("input");c.type="time",c.setAttribute("id","dueTime"),c.name="dueTime",c.defaultValue="00:00",n.appendChild(c),B("notes"," Additional notes: ",n);const s=document.createElement("textarea");s.setAttribute("id","notes"),s.setAttribute("name","notes"),s.setAttribute("rows",2),s.setAttribute("cols",50),s.value=" ",n.appendChild(s),B("projects","select project: ",n);const l=document.createElement("select");l.setAttribute("id","prjctSelect");const A=new Option("no project","default");if(l.add(A,void 0),t.length>0)for(let e=0;e<t.length;e++){const n=new Option(`${t[e]}`,`${t[e]}`);l.add(n,void 0)}n.appendChild(l);const u=document.createElement("button");u.textContent="Add",u.type="button",u.classList.add("submissionButton"),n.appendChild(u),e.appendChild(n)}(x,v)),document.querySelector(".submissionButton").addEventListener("click",(()=>{document.getElementById("title").value?(" "===document.getElementById("notes").value&&(document.getElementById("notes").value="none"),function(e,t,n,o,r,i){const a=((e,t,n,o,r,i)=>({title:e,priorty:t,notes:n,dueDate:o,dueTime:r,project:i}))(document.getElementById("title").value,document.getElementById("priorty").value,document.getElementById("notes").value,document.getElementById("dueDate").value,document.getElementById("dueTime").value,document.getElementById("prjctSelect").value);g.push(a),g.sort(C)}(),I(x),b(x,g),w=0,y=0):alert("please enter a task")}))})),document.querySelector("#activeGoals").addEventListener("click",(()=>{w=0,y=0,I(x),b(x,g)}));const k=document.querySelector(".projectList");E(v,k,x)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQU0sUUZ2QnRDLFNBQThCbkQsRUFBTU8sRUFBUWdCLEVBQU1qQixFQUFRZ0IsRUFBUW9CLEdBRXJFLE1BQU04QixFQVRnQixFQUFDeEUsRUFBTU8sRUFBUWdCLEVBQU1qQixFQUFRZ0IsRUFBUW9CLEtBRXpELENBQUMxQyxRQUFNTyxVQUFRZ0IsUUFBTWpCLFVBQVFnQixVQUFRb0IsWUFPekIrQixDRTZCUTNJLFNBQVN5SSxlQUFlLFNBQWMsTUFDM0R6SSxTQUFTeUksZUFBZSxXQUFnQixNQUN4Q3pJLFNBQVN5SSxlQUFlLFNBQWMsTUFDdEN6SSxTQUFTeUksZUFBZSxXQUFnQixNQUN4Q3pJLFNBQVN5SSxlQUFlLFdBQWdCLE1BQ3hDekksU0FBU3lJLGVBQWUsZUFBb0IsT0ZoQzdDekUsRUFBWWxKLEtBQUs0TixHQUVqQjFFLEVBQVk0RSxLQUFLckUsRUFFckIsQ0V1QklzRSxHQU1BOUMsRUFBa0IwQixHQUNsQjlDLEVBQVk4QyxFQUFZekQsR0FDeEIwQyxFQUFzQixFQUN0QmhDLEVBQTJCLEdBdEIxQjZDLE1BQU0sc0JBdUJULEdBQ0EsSUFJb0J2SCxTQUFTQyxjQUFjLGdCQUU3QjZGLGlCQUFpQixTQUFRLEtBQ3ZDWSxFQUFzQixFQUN0QmhDLEVBQTJCLEVBQzNCcUIsRUFBa0IwQixHQUNsQjlDLEVBQVk4QyxFQUFZekQsRUFBWSxJQUd0QyxNQUFNOEUsRUFBVzlJLFNBQVNDLGNBQWMsZ0JBRXhDc0csRUFBdUJqQyxFQUFZd0UsRUFBV3JCLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL215LXRvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL215LXRvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9teS10by1kby1saXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL215LXRvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vc3JjL29iamVjdC1jcmVhdG9yLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9zcmMvZGl2LW1hbmlwdWxhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi4vc3JjL05hbnVtX0dvdGhpYy9OYW51bUdvdGhpYy1SZWd1bGFyLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fID0gbmV3IFVSTChcIi4uL3NyYy9OYW51bV9Hb3RoaWMvTmFudW1Hb3RoaWMtQm9sZC50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyA9IG5ldyBVUkwoXCIuLi9zcmMvTmFudW1fR290aGljL05hbnVtR290aGljLUV4dHJhQm9sZC50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBmb250LWZhY2V7XFxuICAgIGZvbnQtZmFtaWx5OiBNeS1Hb3RoLUZvbnQ7XFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG59XFxuQGZvbnQtZmFjZXtcXG4gICAgZm9udC1mYW1pbHk6IE15LUdvdGgtRm9udC1oZWF2eTtcXG4gICAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpO1xcbn1cXG5cXG5AZm9udC1mYWNle1xcbiAgICBmb250LWZhbWlseTogTXktR290aC1Gb250LWV4dHJhLWhlYXZ5O1xcbiAgICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18gKyBcIik7XFxufVxcblxcbi5wYWdlQ29udGFpbmVyXFxue1xcbiAgICBmb250LWZhbWlseTogXFxcIk15LUdvdGgtRm9udC1oZWF2eVxcXCI7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNGZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA4ZnI7XFxuICAgIHBhZGRpbmc6IDA7XFxuXFxufVxcbi5oZWFkZXJ7XFxuXFxuICAgIGdyaWQtY29sdW1uOiAxLzM7XFxuICAgIGdyaWQtcm93OiAxLzI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1ZWVhZDQ7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMXZ3O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5zaWRlYmFye1xcbiAgICBncmlkLWNvbHVtbjogMS8yO1xcbiAgICBncmlkLXJvdzogMi8zO1xcbiAgICBib3gtc2hhZG93OiAxcHggMXB4ICNhM2EzYTM7XFxuICAgIHBhZGRpbmc6IDJ2dztcXG4gICAgZm9udC1zaXplOiAxLjVlbTtcXG59XFxuXFxuLm1haW5EaXNwbGF5e1xcbiAgICBncmlkLWNvbHVtbjogMi8zO1xcbiAgICBncmlkLXJvdzogMi8zO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDN2dztcXG59XFxuXFxuLmRpc3BsYXlGb3JtXFxue1xcbiAgICBwYWRkaW5nOiAydnc7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnIgMmZyO1xcblxcbiAgICBnYXA6IDEwcHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG5cXG5cXG59XFxuXFxuLnN1Ym1pc3Npb25CdXR0b25cXG57XFxuICAgIGdyaWQtY29sdW1uOiA0LzU7XFxuXFxufVxcblxcbiNub3Rlc1xcbntcXG5ncmlkLWNvbHVtbjogMi81O1xcblxcbn1cXG5cXG4udG9Eb0Rpc3BsYXlEaXZcXG57XFxuICAgIHBhZGRpbmc6IDF2dztcXG5cXG59XFxuXFxuLnNpZGViYXJJdGVtXFxue1xcbiAgICBtYXJnaW4tYm90dG9tOiAydmg7XFxufVxcblxcbiNhY3RpdmVHb2Fsczpob3ZlclxcbntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTdlYjtcXG5cXG59XFxuXFxuLnByb2plY3RJdGVtOmhvdmVyXFxue1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlN2ViO1xcblxcbn1cXG5saS5wcm9qZWN0SXRlbXtcXG4gICAgZm9udC1zaXplOiAwLjhlbTtcXG4gICAgcGFkZGluZzogMXZ3O1xcbn1cXG5cXG4udG9Eb0Rpc3BEaXZcXG57XFxud2lkdGg6IDk1JTtcXG5wYWRkaW5nOiAxdnc7XFxuZGlzcGxheTogZ3JpZDtcXG5ncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDhmciAxZnIgMWZyO1xcbmdhcDogMC41dnc7XFxuYm9yZGVyLWJvdHRvbTogI2EzYTNhMyBkb3R0ZWQgMXB4O1xcblxcbn1cXG5cXG4uY2xlYXJlZFRhc2tcXG57XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbiAgICBjb2xvcjogcmdiYSgxMzksIDEzMywgMTMzLCAwLjgpO1xcbn1cXG5cXG4ucHJvamVjdEFkZGl0aW9uZGl2XFxue1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyZnIgMWZyO1xcbiAgICBnYXA6IDF2dztcXG4gICAgbWFyZ2luOiAydmg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHlCQUF5QjtJQUN6Qiw0Q0FBdUQ7QUFDM0Q7QUFDQTtJQUNJLCtCQUErQjtJQUMvQiw0Q0FBb0Q7QUFDeEQ7O0FBRUE7SUFDSSxxQ0FBcUM7SUFDckMsNENBQXlEO0FBQzdEOztBQUVBOztJQUVJLGlDQUFpQztJQUNqQyxZQUFZO0lBQ1osYUFBYTtJQUNiLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLFVBQVU7O0FBRWQ7QUFDQTs7SUFFSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsaUJBQWlCO0FBQ3JCOztBQUVBOztJQUVJLFlBQVk7SUFDWixhQUFhO0lBQ2Isc0NBQXNDO0lBQ3RDLCtCQUErQjs7SUFFL0IsU0FBUztJQUNULGtCQUFrQjs7O0FBR3RCOztBQUVBOztJQUVJLGdCQUFnQjs7QUFFcEI7O0FBRUE7O0FBRUEsZ0JBQWdCOztBQUVoQjs7QUFFQTs7SUFFSSxZQUFZOztBQUVoQjs7QUFFQTs7SUFFSSxrQkFBa0I7QUFDdEI7O0FBRUE7O0lBRUkseUJBQXlCOztBQUU3Qjs7QUFFQTs7SUFFSSx5QkFBeUI7O0FBRTdCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTs7QUFFQSxVQUFVO0FBQ1YsWUFBWTtBQUNaLGFBQWE7QUFDYixrQ0FBa0M7QUFDbEMsVUFBVTtBQUNWLGlDQUFpQzs7QUFFakM7O0FBRUE7O0lBRUksNkJBQTZCO0lBQzdCLCtCQUErQjtBQUNuQzs7QUFFQTs7SUFFSSxVQUFVO0lBQ1YsYUFBYTtJQUNiLGtDQUFrQztJQUNsQyxRQUFRO0lBQ1IsV0FBVztJQUNYLGtCQUFrQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNle1xcbiAgICBmb250LWZhbWlseTogTXktR290aC1Gb250O1xcbiAgICBzcmM6IHVybChcXFwiLi4vc3JjL05hbnVtX0dvdGhpYy9OYW51bUdvdGhpYy1SZWd1bGFyLnR0ZlxcXCIpO1xcbn1cXG5AZm9udC1mYWNle1xcbiAgICBmb250LWZhbWlseTogTXktR290aC1Gb250LWhlYXZ5O1xcbiAgICBzcmM6IHVybChcXFwiLi4vc3JjL05hbnVtX0dvdGhpYy9OYW51bUdvdGhpYy1Cb2xkLnR0ZlxcXCIpO1xcbn1cXG5cXG5AZm9udC1mYWNle1xcbiAgICBmb250LWZhbWlseTogTXktR290aC1Gb250LWV4dHJhLWhlYXZ5O1xcbiAgICBzcmM6IHVybChcXFwiLi4vc3JjL05hbnVtX0dvdGhpYy9OYW51bUdvdGhpYy1FeHRyYUJvbGQudHRmXFxcIik7XFxufVxcblxcbi5wYWdlQ29udGFpbmVyXFxue1xcbiAgICBmb250LWZhbWlseTogXFxcIk15LUdvdGgtRm9udC1oZWF2eVxcXCI7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNGZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA4ZnI7XFxuICAgIHBhZGRpbmc6IDA7XFxuXFxufVxcbi5oZWFkZXJ7XFxuXFxuICAgIGdyaWQtY29sdW1uOiAxLzM7XFxuICAgIGdyaWQtcm93OiAxLzI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1ZWVhZDQ7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgcGFkZGluZzogMXZ3O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5zaWRlYmFye1xcbiAgICBncmlkLWNvbHVtbjogMS8yO1xcbiAgICBncmlkLXJvdzogMi8zO1xcbiAgICBib3gtc2hhZG93OiAxcHggMXB4ICNhM2EzYTM7XFxuICAgIHBhZGRpbmc6IDJ2dztcXG4gICAgZm9udC1zaXplOiAxLjVlbTtcXG59XFxuXFxuLm1haW5EaXNwbGF5e1xcbiAgICBncmlkLWNvbHVtbjogMi8zO1xcbiAgICBncmlkLXJvdzogMi8zO1xcbiAgICBwYWRkaW5nLWxlZnQ6IDN2dztcXG59XFxuXFxuLmRpc3BsYXlGb3JtXFxue1xcbiAgICBwYWRkaW5nOiAydnc7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnIgMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnIgMmZyO1xcblxcbiAgICBnYXA6IDEwcHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG5cXG5cXG59XFxuXFxuLnN1Ym1pc3Npb25CdXR0b25cXG57XFxuICAgIGdyaWQtY29sdW1uOiA0LzU7XFxuXFxufVxcblxcbiNub3Rlc1xcbntcXG5ncmlkLWNvbHVtbjogMi81O1xcblxcbn1cXG5cXG4udG9Eb0Rpc3BsYXlEaXZcXG57XFxuICAgIHBhZGRpbmc6IDF2dztcXG5cXG59XFxuXFxuLnNpZGViYXJJdGVtXFxue1xcbiAgICBtYXJnaW4tYm90dG9tOiAydmg7XFxufVxcblxcbiNhY3RpdmVHb2Fsczpob3ZlclxcbntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U1ZTdlYjtcXG5cXG59XFxuXFxuLnByb2plY3RJdGVtOmhvdmVyXFxue1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlN2ViO1xcblxcbn1cXG5saS5wcm9qZWN0SXRlbXtcXG4gICAgZm9udC1zaXplOiAwLjhlbTtcXG4gICAgcGFkZGluZzogMXZ3O1xcbn1cXG5cXG4udG9Eb0Rpc3BEaXZcXG57XFxud2lkdGg6IDk1JTtcXG5wYWRkaW5nOiAxdnc7XFxuZGlzcGxheTogZ3JpZDtcXG5ncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDhmciAxZnIgMWZyO1xcbmdhcDogMC41dnc7XFxuYm9yZGVyLWJvdHRvbTogI2EzYTNhMyBkb3R0ZWQgMXB4O1xcblxcbn1cXG5cXG4uY2xlYXJlZFRhc2tcXG57XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbiAgICBjb2xvcjogcmdiYSgxMzksIDEzMywgMTMzLCAwLjgpO1xcbn1cXG5cXG4ucHJvamVjdEFkZGl0aW9uZGl2XFxue1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyZnIgMWZyO1xcbiAgICBnYXA6IDF2dztcXG4gICAgbWFyZ2luOiAydmg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY29uc3QgVG9Eb0xpc3RJdGVtQ3JlYXRvcj0odGl0bGUscHJpb3J0eSxub3RlcyxkdWVEYXRlLGR1ZVRpbWUscHJvamVjdCk9Plxue1xucmV0dXJue3RpdGxlLHByaW9ydHksbm90ZXMsZHVlRGF0ZSxkdWVUaW1lLHByb2plY3R9O1xufVxuXG5leHBvcnQgY29uc3QgbGlzdE9mVG9Eb3M9W107XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVOZXdUb2Rvc1RvTGlzdCh0aXRsZSxwcmlvcnR5LG5vdGVzLGR1ZURhdGUsZHVlVGltZSxwcm9qZWN0KVxue1xuICAgIGNvbnN0IG5ld1RvRG89VG9Eb0xpc3RJdGVtQ3JlYXRvcih0aXRsZSxwcmlvcnR5LG5vdGVzLGR1ZURhdGUsZHVlVGltZSxwcm9qZWN0KTtcbi8vICAgIGNvbnNvbGUubG9nKG5ld1RvRG8pO1xuICAgIGxpc3RPZlRvRG9zLnB1c2gobmV3VG9Ebyk7XG4gIC8vICBjb25zb2xlLmxvZyhsaXN0T2ZUb0Rvcyk7XG4gICAgbGlzdE9mVG9Eb3Muc29ydChzb3J0QnlEYXRlQW5kUHJpb3J0eSk7XG4gIC8vICBjb25zb2xlLmxvZyhsaXN0T2ZUb0Rvcyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVUb0Rvcyh0aXRsZSlcbntcbiAgICBjb25zdCBzZWFyY2hJbmRleD1saXN0T2ZUb0Rvcy5maW5kSW5kZXgoKHRvZG8pPT50b2RvLnRpdGxlPT10aXRsZSk7XG4gIC8vICBjb25zb2xlLmxvZyhzZWFyY2hJbmRleCk7XG4gICAgbGlzdE9mVG9Eb3Muc3BsaWNlKHNlYXJjaEluZGV4LDEpO1xuXG59XG5cbmV4cG9ydCBjb25zdCBwcm9qZWN0TGlzdD1bXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb2plY3RJdGVtcyhwcm9qZWN0KVxue1xuICAgIGNvbnN0IGZpbHRlcmVkTGlzdD1saXN0T2ZUb0Rvcy5maWx0ZXIodGFzaz0+dGFzay5wcm9qZWN0PT09cHJvamVjdCk7XG5cbiAgICByZXR1cm4gZmlsdGVyZWRMaXN0O1xuXG59XG5cblxuXG5mdW5jdGlvbiBzb3J0QnlEYXRlQW5kUHJpb3J0eShhLCBiKVxue1xuaWYgKCBhLmR1ZURhdGUgPCBiLmR1ZURhdGUpe1xuICByZXR1cm4gLTE7XG59XG5pZiAoIGEuZHVlRGF0ZT4gYi5kdWVEYXRlKXtcbiAgcmV0dXJuIDE7XG59XG5pZiAoIChhLnByaW9ydHk9PT1cImhpZ2hcIikmJiAoYi5wcmlvcnR5PT09XCJsb3dcIikpe1xuICAgIHJldHVybiAtMTtcbiAgfVxuICBpZiAoIChhLnByaW9ydHk9PT1cImxvd1wiKSYmKCBiLnByaW9ydHk9PT1cImhpZ2hcIikpe1xuICAgIHJldHVybiAxO1xuICB9XG5cbnJldHVybiAwO1xufVxuXG4iLCJpbXBvcnQgeyBkZWxldGVUb0RvcyxnZXRQcm9qZWN0SXRlbXN9IGZyb20gXCIuL29iamVjdC1jcmVhdG9yXCI7XG5pbXBvcnQgeyBkdXBsaWNhdGlvblByZXZlbnRpb24gfSBmcm9tIFwiLi9pbmRleFwiO1xuZXhwb3J0IGxldCBkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbD0wO1xuLy9maXJzdCBmdW5jdGlvbiBkeW5hbWljYWxseSBkaXNwbGF5cyBhIGZvcm0gdG8gY2FwdHVyZSBuZXcgdG9kb3MgIFxuZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlBZGRpdGlvbkZvcm0ocGFyZW50RGl2LHByb2plY3RMaXN0KXtcbiAgICBcbiAgICBjb25zdCBteVRvRG9Gb3JtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG15VG9Eb0Zvcm0uY2xhc3NMaXN0LmFkZCgnZGlzcGxheUZvcm0nKTtcbiAgICBcbiAgICBBZGRMYWJlbChcInRpdGxlXCIsXCIgTmV3IFRhc2s6XCIsbXlUb0RvRm9ybSk7XG4gICAgY29uc3QgdGl0bGVJbnB1dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgdGl0bGVJbnB1dC50eXBlPVwidGV4dFwiO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIixcInRpdGxlXCIpO1xuICAgIHRpdGxlSW5wdXQubmFtZT1cInRpdGxlXCI7XG4gICAgLy90aXRsZUlucHV0LnZhbHVlPVwiIFwiO1xuICAgIG15VG9Eb0Zvcm0uYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG5cbiAgICBBZGRMYWJlbChcInByaW9ydHlcIixcIiBzZWxlY3QgYSBsZXZlbCBvZiBwcmlvcnR5OlwiLG15VG9Eb0Zvcm0pO1xuICAgIGNvbnN0IHByaW9ydHlTZXR0ZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgICBwcmlvcnR5U2V0dGVyLnNldEF0dHJpYnV0ZShcImlkXCIsXCJwcmlvcnR5XCIpO1xuICAgIGNvbnN0IGhpZ2g9bmV3IE9wdGlvbihcIkhpZ2hcIixcImhpZ2hcIik7XG4gICAgY29uc3QgbG93PW5ldyBPcHRpb24oXCJMb3dcIixcImxvd1wiKTtcbiAgICBwcmlvcnR5U2V0dGVyLmFkZChsb3csdW5kZWZpbmVkKTtcbiAgICBwcmlvcnR5U2V0dGVyLmFkZChoaWdoLHVuZGVmaW5lZCk7XG4gICAgbXlUb0RvRm9ybS5hcHBlbmRDaGlsZChwcmlvcnR5U2V0dGVyKTtcblxuICAgIEFkZExhYmVsKFwiZHVlRGF0ZVwiLFwiIER1ZSBEYXRlOiBcIixteVRvRG9Gb3JtKTtcbiAgICBjb25zdCBkdWVEYXRlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBkdWVEYXRlLnR5cGU9XCJkYXRlXCI7XG4gICAgZHVlRGF0ZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwiZHVlRGF0ZVwiKTtcbiAgICBkdWVEYXRlLm5hbWU9XCJkdWVEYXRlXCI7XG4gICAvL2xldCB0b2RheT1uZXcgRGF0ZSgpO1xuICAgZHVlRGF0ZS52YWx1ZT1uZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDEwKTtcbiAgIGR1ZURhdGUuc2V0QXR0cmlidXRlKFwibWluXCIsbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCkpO1xuICAgLy9kdWVEYXRlLnZhbHVlPWAke3RvZGF5LmdldEZ1bGxZZWFyKCl9LSR7KHRvZGF5LmdldE1vbnRoKCkrMSl9LSR7dG9kYXkuZ2V0RGF0ZSgpfWA7XG4gICBcbiAgIG15VG9Eb0Zvcm0uYXBwZW5kQ2hpbGQoZHVlRGF0ZSk7XG5cbiAgICBBZGRMYWJlbChcImR1ZVRpbWVcIixcIkR1ZSB0aW1lOlwiLG15VG9Eb0Zvcm0pO1xuICAgIGNvbnN0IGR1ZVRpbWU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGR1ZVRpbWUudHlwZT1cInRpbWVcIjtcbiAgICBkdWVUaW1lLnNldEF0dHJpYnV0ZShcImlkXCIsXCJkdWVUaW1lXCIpO1xuICAgIGR1ZVRpbWUubmFtZT1cImR1ZVRpbWVcIjtcbiAgICBkdWVUaW1lLmRlZmF1bHRWYWx1ZT1cIjAwOjAwXCI7XG4gICAgbXlUb0RvRm9ybS5hcHBlbmRDaGlsZChkdWVUaW1lKVxuXG5cbiAgICBBZGRMYWJlbChcIm5vdGVzXCIsXCIgQWRkaXRpb25hbCBub3RlczogXCIsbXlUb0RvRm9ybSk7XG4gICAgY29uc3QgYWRkaXRpb25hbE5vdGVzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcbiAgICBhZGRpdGlvbmFsTm90ZXMuc2V0QXR0cmlidXRlKFwiaWRcIixcIm5vdGVzXCIpO1xuICAgIGFkZGl0aW9uYWxOb3Rlcy5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJub3Rlc1wiKTtcbiAgICBhZGRpdGlvbmFsTm90ZXMuc2V0QXR0cmlidXRlKFwicm93c1wiLDIpO1xuICAgIGFkZGl0aW9uYWxOb3Rlcy5zZXRBdHRyaWJ1dGUoXCJjb2xzXCIsNTApO1xuICAgIGFkZGl0aW9uYWxOb3Rlcy52YWx1ZT1cIiBcIjtcbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKGFkZGl0aW9uYWxOb3Rlcyk7XG5cbiAgICBBZGRMYWJlbChcInByb2plY3RzXCIsXCJzZWxlY3QgcHJvamVjdDogXCIsbXlUb0RvRm9ybSk7XG4gICAgY29uc3QgcHJvamVjdFNlbGVjdG9yPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICAgcHJvamVjdFNlbGVjdG9yLnNldEF0dHJpYnV0ZShcImlkXCIsXCJwcmpjdFNlbGVjdFwiKTtcbiAgICBjb25zdCBkZWZhdWx0T3B0aW9uPW5ldyBPcHRpb24oXCJubyBwcm9qZWN0XCIsXCJkZWZhdWx0XCIpO1xuICAgIHByb2plY3RTZWxlY3Rvci5hZGQoZGVmYXVsdE9wdGlvbix1bmRlZmluZWQpO1xuXG4gICAgaWYoKHByb2plY3RMaXN0Lmxlbmd0aCk+MClcbiAgICB7XG4gICAgICAgIGZvcihsZXQgaT0wO2k8KHByb2plY3RMaXN0Lmxlbmd0aCk7aSsrKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBuZXdPcHRpb249bmV3IE9wdGlvbihgJHtwcm9qZWN0TGlzdFtpXX1gLGAke3Byb2plY3RMaXN0W2ldfWApO1xuICAgICAgICAgICAgcHJvamVjdFNlbGVjdG9yLmFkZChuZXdPcHRpb24sdW5kZWZpbmVkKTtcblxuICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICBcblxuICAgIH1cbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKHByb2plY3RTZWxlY3RvcilcblxuICAgIGNvbnN0IHN1Ym1pdEJ0dG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBzdWJtaXRCdHRuLnRleHRDb250ZW50PVwiQWRkXCI7XG4gICAgc3VibWl0QnR0bi50eXBlPVwiYnV0dG9uXCI7XG4gICAgc3VibWl0QnR0bi5jbGFzc0xpc3QuYWRkKFwic3VibWlzc2lvbkJ1dHRvblwiKTtcbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKHN1Ym1pdEJ0dG4pO1xuICAgIFxuICAgIFxuICAgIFxuICAgIHBhcmVudERpdi5hcHBlbmRDaGlsZChteVRvRG9Gb3JtKTtcbn1cblxuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIERpc3BsYXlUb0RvKHBhcmVudERpdix0b0RvTGlzdClcbntcblxuaWYodG9Eb0xpc3QubGVuZ3RoPT09MClcbntcbiAgICBjb25zdCBpbnRyb0hlYWRlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgaW50cm9IZWFkZXIudGV4dENvbnRlbnQ9XCJZb3UgaGF2ZSBub3RoaW5nIHRvIGRvIHlldCEgQWRkIGEgdGFzayFcIjtcbiAgICBwYXJlbnREaXYuYXBwZW5kQ2hpbGQoaW50cm9IZWFkZXIpOyAgICBcblxufVxuZWxzZXtcbmZvcihsZXQgaT0wO2k8KHRvRG9MaXN0Lmxlbmd0aCk7aSsrKVxue1xuICAgIGNvbnN0IHRvZG9EaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgdGl0bGU9dG9Eb0xpc3RbaV0udGl0bGU7XG4gICAgdG9kb0Rpdi5jbGFzc0xpc3QuYWRkKFwidG9Eb0Rpc3BEaXZcIik7XG4gICAgdG9kb0Rpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLHRpdGxlKTtcblxuICAgIGNvbnN0IHBhcmFncmFwaE9uZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBwYXJhZ3JhcGh0d289ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBpZigodG9Eb0xpc3RbaV0uZHVlRGF0ZSk9PT0obmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCkpKVxuICAgIHtcbiAgICAgICAgcGFyYWdyYXBoT25lLnRleHRDb250ZW50PVwidG9kYXk6XCI7XG5cbiAgICB9XG5cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBwYXJhZ3JhcGhPbmUudGV4dENvbnRlbnQ9YCR7dG9Eb0xpc3RbaV0uZHVlRGF0ZX06YDtcbiAgICB9XG5cbiAgICBwYXJhZ3JhcGhPbmUudGV4dENvbnRlbnQrPWAgJHt0b0RvTGlzdFtpXS50aXRsZX0gcHJpb3J0eTogJHt0b0RvTGlzdFtpXS5wcmlvcnR5fWA7XG4gICAgaWYoKHRvRG9MaXN0W2ldLmR1ZVRpbWUpIT09XCIwMDowMFwiKVxuICAgIHtcbiAgICAgICAgcGFyYWdyYXBoT25lLnRleHRDb250ZW50Kz1gIGR1ZSBieTogJHt0b0RvTGlzdFtpXS5kdWVUaW1lfSBvJ2Nsb2NrYDtcbiAgICB9XG5cbiAgICBwYXJhZ3JhcGh0d28udGV4dENvbnRlbnQ9YCAgIEFkZGl0aW9uYWwgbm90ZXM6ICR7dG9Eb0xpc3RbaV0ubm90ZXN9YDtcblxuICAgIGNvbnN0IGNvbXBsZXRlZEJ0dG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjb21wbGV0ZWRCdHRuLmNsYXNzTGlzdC5hZGQoXCJxdWVzdENvbXBsZXRlXCIpO1xuICAgIGNvbXBsZXRlZEJ0dG4uc2V0QXR0cmlidXRlKFwiaWRcIixgJHt0b0RvTGlzdFtpXS50aXRsZX1gKTtcbiAgICBcbiAgICBjb25zdCBjaGVja01hcms9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgY2hlY2tNYXJrLnNyYz1cIi4vY2hlY2stb3V0bGluZS5wbmdcIjtcbiAgICBjb21wbGV0ZWRCdHRuLmFwcGVuZENoaWxkKGNoZWNrTWFyayk7XG4gICAgXG4gICAgY29uc3QgZGVsZXRlQnR0bj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGRlbGV0ZUJ0dG4uY2xhc3NMaXN0LmFkZChcInF1ZXN0ZGVsZXRlXCIpO1xuICAgIGRlbGV0ZUJ0dG4uc2V0QXR0cmlidXRlKFwiaWRcIixgJHt0b0RvTGlzdFtpXS50aXRsZX1gKTtcblxuICAgIGNvbnN0IGRlbGV0ZUljb249ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgZGVsZXRlSWNvbi5zcmM9Jy4vZmlsZS1kb2N1bWVudC1yZW1vdmUucG5nJztcbiAgICBkZWxldGVCdHRuLmFwcGVuZENoaWxkKGRlbGV0ZUljb24pO1xuXG5cblxuICAgIHRvZG9EaXYuYXBwZW5kQ2hpbGQocGFyYWdyYXBoT25lKTtcbiAgICB0b2RvRGl2LmFwcGVuZENoaWxkKGNvbXBsZXRlZEJ0dG4pO1xuICAgIHRvZG9EaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnR0bik7XG4gICAgdG9kb0Rpdi5hcHBlbmRDaGlsZChwYXJhZ3JhcGh0d28pO1xuICAgIHBhcmVudERpdi5hcHBlbmRDaGlsZCh0b2RvRGl2KTtcblxuICAgIGNvbXBsZXRlZEJ0dG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntcbiAgICAgICAgdG9kb0Rpdi5jbGFzc0xpc3QuYWRkKFwiY2xlYXJlZFRhc2tcIik7XG5cbiAgICB9KTtcbiAgICBkZWxldGVCdHRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT5cbiAgICB7XG4gICAgICAgIGRlbGV0ZVRvRG9zKHRpdGxlKTtcbiAgICAgICAgcGFyZW50RGl2LnJlbW92ZUNoaWxkKHRvZG9EaXYpO1xuICAgIH1cbiAgICApO1xuXG59XG5cbn1cblxuXG59XG5cblxuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJEaXZDb250YWluZXIoY29udGFpbmVyKXtcbndoaWxlKGNvbnRhaW5lci5maXJzdENoaWxkKVxue1xuICAgIGNvbnRhaW5lci5yZW1vdmVDaGlsZChjb250YWluZXIubGFzdENoaWxkKTtcblxufVxuXG59XG5cblxuZnVuY3Rpb24gQWRkTGFiZWwoaW5wdXROYW1lLGRpc3BsYXlUZXh0LHBhcmVudClcbntcbiAgICBjb25zdCBsYWJlbD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgbGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsaW5wdXROYW1lKTtcbiAgICBsYWJlbC50ZXh0Q29udGVudD1kaXNwbGF5VGV4dDtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQobGFiZWwpO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBhZGROZXdQcm9qZWN0KHByb2plY3RMaXN0LHBhcmVudERpdixwYXJlbnRMaXN0RGlzcClcbntcbmlmKGR1cGxpY2F0aW9uUHJldmVudGlvbkxvY2FsPT0wKXtcbiAgICBkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbCsrO1xuXG5jb25zdCBhZGRQcm9qZWN0RGl2PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuYWRkUHJvamVjdERpdi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdEFkZGl0aW9uZGl2XCIpO1xuXG5BZGRMYWJlbChcIm5ld1Byb2plY3RcIixcIm5ldyBwcm9qZWN0OlwiLGFkZFByb2plY3REaXYpO1xuY29uc3QgcHJvamVjdElucHV0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbnByb2plY3RJbnB1dC50eXBlPVwidGV4dFwiO1xucHJvamVjdElucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsXCJuZXdQcm9qZWN0XCIpO1xucHJvamVjdElucHV0Lm5hbWU9XCJuZXdQcm9qZWN0XCI7XG5wcm9qZWN0SW5wdXQudmFsdWU9XCIgXCI7XG5hZGRQcm9qZWN0RGl2LmFwcGVuZENoaWxkKHByb2plY3RJbnB1dCk7XG5cbmNvbnN0IGFkZFByb2pCdHRuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG5hZGRQcm9qQnR0bi50ZXh0Q29udGVudD1cIkFkZFwiO1xuYWRkUHJvakJ0dG4udHlwZT1cImJ1dHRvblwiO1xuYWRkUHJvakJ0dG4uY2xhc3NMaXN0LmFkZChcImFkZGluZ1Byb2plY3RCdG5cIik7XG5hZGRQcm9qZWN0RGl2LmFwcGVuZENoaWxkKGFkZFByb2pCdHRuKTtcblxucGFyZW50RGl2LmFwcGVuZENoaWxkKGFkZFByb2plY3REaXYpO1xuXG5hZGRQcm9qQnR0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e1xuICAgIGlmIChwcm9qZWN0SW5wdXQudmFsdWU9PT0nICcpXG4gICAge1xuICAgICAgICBhbGVydChcInBsZWFzZSBlbnRlciBhIG5hbWUgZm9yIHRoZSBuZXcgcHJvamVjdFwiKTtcbiAgICB9XG4gICAgZWxzZXtcbiAgICAgICAgcHJvamVjdExpc3QucHVzaChwcm9qZWN0SW5wdXQudmFsdWUpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKHByb2plY3RMaXN0KTtcbiAgICAgICAgZHVwbGljYXRpb25QcmV2ZW50aW9uTG9jYWw9MDtcbiAgICAgICAgZGlzcGxheVNpZGVCYXJQcm9qZWN0cyhwcm9qZWN0TGlzdCxwYXJlbnRMaXN0RGlzcCxwYXJlbnREaXYpO1xuICAgICAgICBwYXJlbnREaXYucmVtb3ZlQ2hpbGQoYWRkUHJvamVjdERpdik7XG5cbiAgICB9XG59KTtcblxufVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzcGxheVNpZGVCYXJQcm9qZWN0cyhwcm9qZWN0TGlzdCxwYXJlbnQsbWFpbkRpc3ApXG57XG4gICAgY2xlYXJEaXZDb250YWluZXIocGFyZW50KTtcbiAgICBpZigocHJvamVjdExpc3QubGVuZ3RoKSE9PTApe1xuZm9yKGxldCBpPTA7aTwocHJvamVjdExpc3QubGVuZ3RoKTtpKyspXG57XG4gICAgY29uc3QgcHJvamVjdEl0ZW09ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgIHByb2plY3RJdGVtLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0SXRlbVwiKTtcbiAgICBwcm9qZWN0SXRlbS5zZXRBdHRyaWJ1dGUoXCJpZFwiLHByb2plY3RMaXN0W2ldKTtcbiAgICBwcm9qZWN0SXRlbS50ZXh0Q29udGVudD1wcm9qZWN0TGlzdFtpXTtcbiAgIC8vIGNvbnNvbGUubG9nKHByb2plY3RJdGVtKTtcblxuICAgIHBhcmVudC5hcHBlbmRDaGlsZChwcm9qZWN0SXRlbSk7XG5cbnByb2plY3RJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgIGR1cGxpY2F0aW9uUHJldmVudGlvbj0wO1xuICAgIGR1cGxpY2F0aW9uUHJldmVudGlvbkxvY2FsPTBcbiAgICAvL2NvbnNvbGUubG9nKHByb2plY3RJdGVtWydpZCddKVxuICAgIGNvbnN0IGZpbHRlcmVkTGlzdD1nZXRQcm9qZWN0SXRlbXMocHJvamVjdEl0ZW1bJ2lkJ10pXG4gICAgY2xlYXJEaXZDb250YWluZXIobWFpbkRpc3ApO1xuICAgIERpc3BsYXlUb0RvKG1haW5EaXNwLGZpbHRlcmVkTGlzdCk7XG59KTtcbn19XG5jb25zdCBwcm9qZWN0QWRkZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpXG5wcm9qZWN0QWRkZXIuY2xhc3NMaXN0LmFkZChcInByb2plY3RJdGVtXCIpO1xucHJvamVjdEFkZGVyLmNsYXNzTGlzdC5hZGQoXCJzaWRlYmFySXRlbVwiKTtcbnByb2plY3RBZGRlci5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwicHJvamVjdEFkZGl0aW9uXCIpO1xucHJvamVjdEFkZGVyLnRleHRDb250ZW50PVwiQWRkIG5ldyBQcm9qZWN0ICArXCI7XG5wYXJlbnQuYXBwZW5kQ2hpbGQocHJvamVjdEFkZGVyKTtcbnByb2plY3RBZGRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcbiAgICBhZGROZXdQcm9qZWN0KHByb2plY3RMaXN0LG1haW5EaXNwLHBhcmVudCl9KTtcblxufVxuIiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQge3VwZGF0ZU5ld1RvZG9zVG9MaXN0LGxpc3RPZlRvRG9zLHByb2plY3RMaXN0LGdldFByb2plY3RJdGVtc30gZnJvbSBcIi4vb2JqZWN0LWNyZWF0b3JcIjtcbmltcG9ydHtkaXNwbGF5QWRkaXRpb25Gb3JtLERpc3BsYXlUb0RvLGNsZWFyRGl2Q29udGFpbmVyLGFkZE5ld1Byb2plY3QsZGlzcGxheVNpZGVCYXJQcm9qZWN0c30gZnJvbSBcIi4vZGl2LW1hbmlwdWxhdGlvbnNcIjtcbmltcG9ydCB7IGR1cGxpY2F0aW9uUHJldmVudGlvbkxvY2FsIH0gZnJvbSAnLi9kaXYtbWFuaXB1bGF0aW9ucyc7XG5cbmV4cG9ydCBsZXQgZHVwbGljYXRpb25QcmV2ZW50aW9uPTA7IFxuXG5jb25zdCBtYWluRGlzcGxheT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW5EaXNwbGF5XCIpO1xuY29uc3QgdG9kb0FkZGJ0bj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZFRvRG9zXCIpO1xuXG5jb25zdCBkaXNwbGF5ZWRQcm9qZWN0cz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RMaXN0XCIpO1xuXG5kaXNwbGF5U2lkZUJhclByb2plY3RzKHByb2plY3RMaXN0LGRpc3BsYXllZFByb2plY3RzKTtcblxuRGlzcGxheVRvRG8obWFpbkRpc3BsYXksbGlzdE9mVG9Eb3MpO1xuXG50b2RvQWRkYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICBpZihkdXBsaWNhdGlvblByZXZlbnRpb249PT0wKVxuICB7XG4gICAgZHVwbGljYXRpb25QcmV2ZW50aW9uKys7XG4gICAgZGlzcGxheUFkZGl0aW9uRm9ybShtYWluRGlzcGxheSxwcm9qZWN0TGlzdCk7XG4gIH1cbiAgY29uc3Qgc3VibWl0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3VibWlzc2lvbkJ1dHRvblwiKTtcbiAgc3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgIGlmKCEoKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIikpLnZhbHVlKSlcbiAgICB7YWxlcnQoXCJwbGVhc2UgZW50ZXIgYSB0YXNrXCIpO31cbmVsc2VcbntcbiAgICBpZigoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3Rlc1wiKS52YWx1ZSk9PT1cIiBcIilcbiAgICB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5vdGVzXCIpLnZhbHVlPVwibm9uZVwiO1xuICAgIH1cblxuICAgIC8vIGlmKCEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkdWVEYXRlXCIpLnZhbHVlKSlcbiAgICAvLyB7XG4gICAgLy8gICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImR1ZURhdGVcIikudmFsdWU9XCJ0b2RheVwiO1xuICAgIC8vIH1cblxuICAgIHVwZGF0ZU5ld1RvZG9zVG9MaXN0KChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlKSxcbiAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmlvcnR5XCIpLnZhbHVlKSxcbiAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3Rlc1wiKS52YWx1ZSksXG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHVlRGF0ZVwiKS52YWx1ZSksXG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHVlVGltZVwiKS52YWx1ZSksXG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJqY3RTZWxlY3RcIikudmFsdWUpKTtcbiAgICBjbGVhckRpdkNvbnRhaW5lcihtYWluRGlzcGxheSk7XG4gICAgRGlzcGxheVRvRG8obWFpbkRpc3BsYXksbGlzdE9mVG9Eb3MpO1xuICAgIGR1cGxpY2F0aW9uUHJldmVudGlvbj0wO1xuICAgIGR1cGxpY2F0aW9uUHJldmVudGlvbkxvY2FsPTA7XG4gIH0gICAgXG59KTtcblxufSk7XG5cbmNvbnN0IGFjdGl2ZUdvYWxzQnR0bj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FjdGl2ZUdvYWxzXCIpO1xuXG5hY3RpdmVHb2Fsc0J0dG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XG4gIGR1cGxpY2F0aW9uUHJldmVudGlvbj0wO1xuICBkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbD0wO1xuICBjbGVhckRpdkNvbnRhaW5lcihtYWluRGlzcGxheSk7XG4gIERpc3BsYXlUb0RvKG1haW5EaXNwbGF5LGxpc3RPZlRvRG9zKTtcbn0pO1xuXG5jb25zdCBQcm9qZWN0U2V0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdExpc3RcIik7XG5cbmRpc3BsYXlTaWRlQmFyUHJvamVjdHMocHJvamVjdExpc3QsUHJvamVjdFNldCxtYWluRGlzcGxheSk7XG5cbi8vIFNpZGViYXJCdHRucy5mb3JFYWNoKGJ0dG49PmJ0dG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XG4vLyAgIGlmKGJ0dG5bJ2lkJ109PT0nYWN0aXZlR29hbHMnKVxuLy8gICAgIHtcbiAgICAgXG4vLyAgICAgfVxuXG4vLyAgICAgZWxzZSBpZigoYnR0blsnaWQnXSk9PT0ncHJvamVjdEFkZGl0aW9uJyl7XG4vLyAgICAgICBjbGVhckRpdkNvbnRhaW5lcihtYWluRGlzcGxheSk7XG4vLyAgICAgICBhZGROZXdQcm9qZWN0KHByb2plY3RMaXN0LG1haW5EaXNwbGF5KTtcbi8vICAgICAgIGRpc3BsYXlTaWRlQmFyUHJvamVjdHMocHJvamVjdExpc3QsZGlzcGxheWVkUHJvamVjdHMpO1xuLy8gICAgICAgfVxuXG4vLyAgIGVsc2Vcbi8vICAge1xuXG5cbi8vICAgfVxuLy8gfSkpO1xuXG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJsaXN0T2ZUb0RvcyIsImRlbGV0ZVRvRG9zIiwidGl0bGUiLCJzZWFyY2hJbmRleCIsImZpbmRJbmRleCIsInRvZG8iLCJwcm9qZWN0TGlzdCIsInNvcnRCeURhdGVBbmRQcmlvcnR5IiwiZHVlRGF0ZSIsInByaW9ydHkiLCJkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbCIsIkRpc3BsYXlUb0RvIiwicGFyZW50RGl2IiwidG9Eb0xpc3QiLCJpbnRyb0hlYWRlciIsInRleHRDb250ZW50IiwidG9kb0RpdiIsImNsYXNzTGlzdCIsImFkZCIsInBhcmFncmFwaE9uZSIsInBhcmFncmFwaHR3byIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInN1YnN0cmluZyIsImR1ZVRpbWUiLCJub3RlcyIsImNvbXBsZXRlZEJ0dG4iLCJjaGVja01hcmsiLCJkZWxldGVCdHRuIiwiZGVsZXRlSWNvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGVhckRpdkNvbnRhaW5lciIsImNvbnRhaW5lciIsImxhc3RDaGlsZCIsIkFkZExhYmVsIiwiaW5wdXROYW1lIiwiZGlzcGxheVRleHQiLCJwYXJlbnQiLCJsYWJlbCIsImRpc3BsYXlTaWRlQmFyUHJvamVjdHMiLCJtYWluRGlzcCIsInByb2plY3RJdGVtIiwiZHVwbGljYXRpb25QcmV2ZW50aW9uIiwiZmlsdGVyZWRMaXN0IiwicHJvamVjdCIsImZpbHRlciIsInRhc2siLCJwcm9qZWN0QWRkZXIiLCJwYXJlbnRMaXN0RGlzcCIsImFkZFByb2plY3REaXYiLCJwcm9qZWN0SW5wdXQiLCJ0eXBlIiwibmFtZSIsInZhbHVlIiwiYWRkUHJvakJ0dG4iLCJhbGVydCIsImFkZE5ld1Byb2plY3QiLCJtYWluRGlzcGxheSIsInRvZG9BZGRidG4iLCJkaXNwbGF5ZWRQcm9qZWN0cyIsIm15VG9Eb0Zvcm0iLCJ0aXRsZUlucHV0IiwicHJpb3J0eVNldHRlciIsImhpZ2giLCJPcHRpb24iLCJsb3ciLCJkZWZhdWx0VmFsdWUiLCJhZGRpdGlvbmFsTm90ZXMiLCJwcm9qZWN0U2VsZWN0b3IiLCJkZWZhdWx0T3B0aW9uIiwibmV3T3B0aW9uIiwic3VibWl0QnR0biIsImRpc3BsYXlBZGRpdGlvbkZvcm0iLCJnZXRFbGVtZW50QnlJZCIsIm5ld1RvRG8iLCJUb0RvTGlzdEl0ZW1DcmVhdG9yIiwic29ydCIsInVwZGF0ZU5ld1RvZG9zVG9MaXN0IiwiUHJvamVjdFNldCJdLCJzb3VyY2VSb290IjoiIn0=