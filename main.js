(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>g});var o=n(537),r=n.n(o),i=n(645),a=n.n(i),d=n(667),c=n.n(d),s=new URL(n(605),n.b),l=new URL(n(618),n.b),A=new URL(n(601),n.b),u=a()(r()),p=c()(s),m=c()(l),f=c()(A);u.push([e.id,"@font-face{\n    font-family: My-Goth-Font;\n    src: url("+p+");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("+m+");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("+f+');\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/5;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.projectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.projectItem{\n    font-size: 0.8em;\n    padding: 1vw;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}\n\n.projectAdditiondiv\n{\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    gap: 1vw;\n    margin: 2vh;\n    text-align: center;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,4CAAuD;AAC3D;AACA;IACI,+BAA+B;IAC/B,4CAAoD;AACxD;;AAEA;IACI,qCAAqC;IACrC,4CAAyD;AAC7D;;AAEA;;IAEI,iCAAiC;IACjC,YAAY;IACZ,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,UAAU;;AAEd;AACA;;IAEI,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,+BAA+B;;IAE/B,SAAS;IACT,kBAAkB;;;AAGtB;;AAEA;;IAEI,gBAAgB;;AAEpB;;AAEA;;AAEA,gBAAgB;;AAEhB;;AAEA;;IAEI,YAAY;;AAEhB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;;AAE7B;;AAEA;;IAEI,yBAAyB;;AAE7B;AACA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;;AAEA,UAAU;AACV,YAAY;AACZ,aAAa;AACb,kCAAkC;AAClC,UAAU;AACV,iCAAiC;;AAEjC;;AAEA;;IAEI,6BAA6B;IAC7B,+BAA+B;AACnC;;AAEA;;IAEI,UAAU;IACV,aAAa;IACb,kCAAkC;IAClC,QAAQ;IACR,WAAW;IACX,kBAAkB;AACtB",sourcesContent:['@font-face{\n    font-family: My-Goth-Font;\n    src: url("../src/Nanum_Gothic/NanumGothic-Regular.ttf");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-Bold.ttf");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-ExtraBold.ttf");\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/5;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.projectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.projectItem{\n    font-size: 0.8em;\n    padding: 1vw;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}\n\n.projectAdditiondiv\n{\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    gap: 1vw;\n    margin: 2vh;\n    text-align: center;\n}'],sourceRoot:""}]);const g=u},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var u=n(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=d,t.splice(d,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=n(i[a]);t[d].references--}for(var c=o(e,r),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},618:(e,t,n)=>{e.exports=n.p+"6499af72b1d61fe8269d.ttf"},601:(e,t,n)=>{e.exports=n.p+"d574713406e9230ba246.ttf"},605:(e,t,n)=>{e.exports=n.p+"6c84540de7730f833d6c.ttf"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),i=n(569),a=n.n(i),d=n(565),c=n.n(d),s=n(216),l=n.n(s),A=n(589),u=n.n(A),p=n(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=[];function g(e){const t=f.findIndex((t=>t.title==e));f.splice(t,1)}const h=[];let v=0;function C(e,t){if(0===t.length){const t=document.createElement("h3");t.textContent="You have nothing to do yet! Add a task!",e.appendChild(t)}else for(let n=0;n<t.length;n++){const o=document.createElement("div"),r=t[n].title;o.classList.add("toDoDispDiv"),o.setAttribute("id",r);const i=document.createElement("div"),a=document.createElement("div");t[n].dueDate===(new Date).toISOString().substring(0,10)?i.textContent="today:":i.textContent=`${t[n].dueDate}:`,i.textContent+=` ${t[n].title} priorty: ${t[n].priorty}`,"00:00"!==t[n].dueTime&&(i.textContent+=`_____due by: ${t[n].dueTime} o'clock`),a.textContent=`   Additional notes: ${t[n].notes}`;const d=document.createElement("button");d.classList.add("questComplete"),d.setAttribute("id",`${t[n].title}`);const c=document.createElement("img");c.src="./check-outline.png",d.appendChild(c);const s=document.createElement("button");s.classList.add("questdelete"),s.setAttribute("id",`${t[n].title}`);const l=document.createElement("img");l.src="./file-document-remove.png",s.appendChild(l),o.appendChild(i),o.appendChild(d),o.appendChild(s),o.appendChild(a),e.appendChild(o),d.addEventListener("click",(()=>{o.classList.add("clearedTask")})),s.addEventListener("click",(()=>{g(r),e.removeChild(o)}))}}function y(e){for(;e.firstChild;)e.removeChild(e.lastChild)}function b(e,t,n){const o=document.createElement("label");o.setAttribute("for",e),o.textContent=t,n.appendChild(o)}function I(e,t,n){if(y(t),0!==e.length)for(let n=0;n<e.length;n++){const o=document.createElement("li");o.classList.add("projectItem"),o.setAttribute("id",e[n]),o.textContent=e[n],console.log(o),t.appendChild(o),o.addEventListener("click",(()=>{console.log(o.id)}))}const o=document.createElement("li");o.classList.add("projectItem"),o.classList.add("sidebarItem"),o.setAttribute("id","projectAddition"),o.textContent="Add new Project  +",t.appendChild(o),o.addEventListener("click",(()=>{!function(e,t,n){if(0==v){v++;const o=document.createElement("div");o.classList.add("projectAdditiondiv"),b("newProject","new project:",o);const r=document.createElement("input");r.type="text",r.setAttribute("id","newProject"),r.name="newProject",r.value=" ",o.appendChild(r);const i=document.createElement("button");i.textContent="Add",i.type="button",i.classList.add("addingProjectBtn"),o.appendChild(i),t.appendChild(o),i.addEventListener("click",(()=>{" "===r.value?alert("please enter a name for the new project"):(e.push(r.value),console.log(e),v=0,I(e,n,t),t.removeChild(o))}))}}(e,n,t)}))}let B=0;const E=document.querySelector(".mainDisplay"),w=document.querySelector(".addToDos"),x=document.querySelector(".projectList");I(h,x),C(E,f),w.addEventListener("click",(()=>{0===B&&(B++,function(e,t){const n=document.createElement("div");n.classList.add("displayForm"),b("title"," New Task:",n);const o=document.createElement("input");o.type="text",o.setAttribute("id","title"),o.name="title",n.appendChild(o),b("priorty"," select a level of priorty:",n);const r=document.createElement("select");r.setAttribute("id","priorty");const i=new Option("High","high"),a=new Option("Medium","medium"),d=new Option("Low","low");r.add(d,void 0),r.add(a,void 0),r.add(i,void 0),n.appendChild(r),b("dueDate"," Due Date: ",n);const c=document.createElement("input");c.type="date",c.setAttribute("id","dueDate"),c.name="dueDate",c.value=(new Date).toISOString().substring(0,10),c.setAttribute("min",(new Date).toISOString().substring(0,10)),n.appendChild(c),b("dueTime","Due time:",n);const s=document.createElement("input");s.type="time",s.setAttribute("id","dueTime"),s.name="dueTime",s.defaultValue="00:00",n.appendChild(s),b("notes"," Additional notes: ",n);const l=document.createElement("textarea");l.setAttribute("id","notes"),l.setAttribute("name","notes"),l.setAttribute("rows",2),l.setAttribute("cols",50),l.value=" ",n.appendChild(l),b("projects","select project: ",n);const A=document.createElement("select");A.setAttribute("id","prjctSelect");const u=new Option("no project","default");if(A.add(u,void 0),t.length>0)for(let e=0;e<t.length;e++){const n=new Option(`${t[e]}`,`${t[e]}`);A.add(n,void 0)}n.appendChild(A);const p=document.createElement("button");p.textContent="Add",p.type="button",p.classList.add("submissionButton"),n.appendChild(p),e.appendChild(n)}(E,h)),document.querySelector(".submissionButton").addEventListener("click",(()=>{document.getElementById("title").value?(" "===document.getElementById("notes").value&&(document.getElementById("notes").value="none"),function(e,t,n,o,r,i){const a=((e,t,n,o,r,i)=>({title:e,priorty:t,notes:n,dueDate:o,dueTime:r,project:i}))(document.getElementById("title").value,document.getElementById("priorty").value,document.getElementById("notes").value,document.getElementById("dueDate").value,document.getElementById("dueTime").value,document.getElementById("prjctSelect").value);f.push(a)}(),y(E),C(E,f),B=0):alert("please enter a task")}))})),document.querySelector("#activeGoals").addEventListener("click",(()=>{y(E),C(E,f)}));const D=document.querySelector(".projectList");I(h,D,E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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dkksU0FBU3VJLGVBQWUsU0FBYyxNQUN0Q3ZJLFNBQVN1SSxlQUFlLFdBQWdCLE1BQ3hDdkksU0FBU3VJLGVBQWUsV0FBZ0IsTUFDeEN2SSxTQUFTdUksZUFBZSxlQUFvQixPRi9CN0N2RSxFQUFZbEosS0FBSzJOLEVBRXJCLENFd0JJRSxHQU1BN0MsRUFBa0J3QixHQUNsQjlDLEVBQVk4QyxFQUFZdEQsR0FDeEJxRCxFQUFzQixHQXJCckJGLE1BQU0sc0JBc0JULEdBQ0EsSUFJb0JuSCxTQUFTQyxjQUFjLGdCQUU3QjRGLGlCQUFpQixTQUFRLEtBRXZDQyxFQUFrQndCLEdBQ2xCOUMsRUFBWThDLEVBQVl0RCxFQUFZLElBR3RDLE1BQU00RSxFQUFXNUksU0FBU0MsY0FBYyxnQkFFeENxRyxFQUF1QmhDLEVBQVlzRSxFQUFXdEIsRSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL215LXRvLWRvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9teS10by1kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL215LXRvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL215LXRvLWRvLWxpc3QvLi9zcmMvb2JqZWN0LWNyZWF0b3IuanMiLCJ3ZWJwYWNrOi8vbXktdG8tZG8tbGlzdC8uL3NyYy9kaXYtbWFuaXB1bGF0aW9ucy5qcyIsIndlYnBhY2s6Ly9teS10by1kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9zcmMvTmFudW1fR290aGljL05hbnVtR290aGljLVJlZ3VsYXIudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi4vc3JjL05hbnVtX0dvdGhpYy9OYW51bUdvdGhpYy1Cb2xkLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fID0gbmV3IFVSTChcIi4uL3NyYy9OYW51bV9Hb3RoaWMvTmFudW1Hb3RoaWMtRXh0cmFCb2xkLnR0ZlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGZvbnQtZmFjZXtcXG4gICAgZm9udC1mYW1pbHk6IE15LUdvdGgtRm9udDtcXG4gICAgc3JjOiB1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpO1xcbn1cXG5AZm9udC1mYWNle1xcbiAgICBmb250LWZhbWlseTogTXktR290aC1Gb250LWhlYXZ5O1xcbiAgICBzcmM6IHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gKyBcIik7XFxufVxcblxcbkBmb250LWZhY2V7XFxuICAgIGZvbnQtZmFtaWx5OiBNeS1Hb3RoLUZvbnQtZXh0cmEtaGVhdnk7XFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyArIFwiKTtcXG59XFxuXFxuLnBhZ2VDb250YWluZXJcXG57XFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiTXktR290aC1Gb250LWhlYXZ5XFxcIjtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDhmcjtcXG4gICAgcGFkZGluZzogMDtcXG5cXG59XFxuLmhlYWRlcntcXG5cXG4gICAgZ3JpZC1jb2x1bW46IDEvMztcXG4gICAgZ3JpZC1yb3c6IDEvMjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzVlZWFkNDtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAxdnc7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnNpZGViYXJ7XFxuICAgIGdyaWQtY29sdW1uOiAxLzI7XFxuICAgIGdyaWQtcm93OiAyLzM7XFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggI2EzYTNhMztcXG4gICAgcGFkZGluZzogMnZ3O1xcbiAgICBmb250LXNpemU6IDEuNWVtO1xcbn1cXG5cXG4ubWFpbkRpc3BsYXl7XFxuICAgIGdyaWQtY29sdW1uOiAyLzM7XFxuICAgIGdyaWQtcm93OiAyLzM7XFxuICAgIHBhZGRpbmctbGVmdDogM3Z3O1xcbn1cXG5cXG4uZGlzcGxheUZvcm1cXG57XFxuICAgIHBhZGRpbmc6IDJ2dztcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmciAyZnI7XFxuXFxuICAgIGdhcDogMTBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcblxcblxcbn1cXG5cXG4uc3VibWlzc2lvbkJ1dHRvblxcbntcXG4gICAgZ3JpZC1jb2x1bW46IDQvNTtcXG5cXG59XFxuXFxuI25vdGVzXFxue1xcbmdyaWQtY29sdW1uOiAyLzU7XFxuXFxufVxcblxcbi50b0RvRGlzcGxheURpdlxcbntcXG4gICAgcGFkZGluZzogMXZ3O1xcblxcbn1cXG5cXG4uc2lkZWJhckl0ZW1cXG57XFxuICAgIG1hcmdpbi1ib3R0b206IDJ2aDtcXG59XFxuXFxuI2FjdGl2ZUdvYWxzOmhvdmVyXFxue1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlN2ViO1xcblxcbn1cXG5cXG4ucHJvamVjdEl0ZW06aG92ZXJcXG57XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNWU3ZWI7XFxuXFxufVxcbmxpLnByb2plY3RJdGVte1xcbiAgICBmb250LXNpemU6IDAuOGVtO1xcbiAgICBwYWRkaW5nOiAxdnc7XFxufVxcblxcbi50b0RvRGlzcERpdlxcbntcXG53aWR0aDogOTUlO1xcbnBhZGRpbmc6IDF2dztcXG5kaXNwbGF5OiBncmlkO1xcbmdyaWQtdGVtcGxhdGUtY29sdW1uczogOGZyIDFmciAxZnI7XFxuZ2FwOiAwLjV2dztcXG5ib3JkZXItYm90dG9tOiAjYTNhM2EzIGRvdHRlZCAxcHg7XFxuXFxufVxcblxcbi5jbGVhcmVkVGFza1xcbntcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxuICAgIGNvbG9yOiByZ2JhKDEzOSwgMTMzLCAxMzMsIDAuOCk7XFxufVxcblxcbi5wcm9qZWN0QWRkaXRpb25kaXZcXG57XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDJmciAxZnI7XFxuICAgIGdhcDogMXZ3O1xcbiAgICBtYXJnaW46IDJ2aDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLDRDQUF1RDtBQUMzRDtBQUNBO0lBQ0ksK0JBQStCO0lBQy9CLDRDQUFvRDtBQUN4RDs7QUFFQTtJQUNJLHFDQUFxQztJQUNyQyw0Q0FBeUQ7QUFDN0Q7O0FBRUE7O0lBRUksaUNBQWlDO0lBQ2pDLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QiwyQkFBMkI7SUFDM0IsVUFBVTs7QUFFZDtBQUNBOztJQUVJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixpQkFBaUI7QUFDckI7O0FBRUE7O0lBRUksWUFBWTtJQUNaLGFBQWE7SUFDYixzQ0FBc0M7SUFDdEMsK0JBQStCOztJQUUvQixTQUFTO0lBQ1Qsa0JBQWtCOzs7QUFHdEI7O0FBRUE7O0lBRUksZ0JBQWdCOztBQUVwQjs7QUFFQTs7QUFFQSxnQkFBZ0I7O0FBRWhCOztBQUVBOztJQUVJLFlBQVk7O0FBRWhCOztBQUVBOztJQUVJLGtCQUFrQjtBQUN0Qjs7QUFFQTs7SUFFSSx5QkFBeUI7O0FBRTdCOztBQUVBOztJQUVJLHlCQUF5Qjs7QUFFN0I7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCOztBQUVBOztBQUVBLFVBQVU7QUFDVixZQUFZO0FBQ1osYUFBYTtBQUNiLGtDQUFrQztBQUNsQyxVQUFVO0FBQ1YsaUNBQWlDOztBQUVqQzs7QUFFQTs7SUFFSSw2QkFBNkI7SUFDN0IsK0JBQStCO0FBQ25DOztBQUVBOztJQUVJLFVBQVU7SUFDVixhQUFhO0lBQ2Isa0NBQWtDO0lBQ2xDLFFBQVE7SUFDUixXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2V7XFxuICAgIGZvbnQtZmFtaWx5OiBNeS1Hb3RoLUZvbnQ7XFxuICAgIHNyYzogdXJsKFxcXCIuLi9zcmMvTmFudW1fR290aGljL05hbnVtR290aGljLVJlZ3VsYXIudHRmXFxcIik7XFxufVxcbkBmb250LWZhY2V7XFxuICAgIGZvbnQtZmFtaWx5OiBNeS1Hb3RoLUZvbnQtaGVhdnk7XFxuICAgIHNyYzogdXJsKFxcXCIuLi9zcmMvTmFudW1fR290aGljL05hbnVtR290aGljLUJvbGQudHRmXFxcIik7XFxufVxcblxcbkBmb250LWZhY2V7XFxuICAgIGZvbnQtZmFtaWx5OiBNeS1Hb3RoLUZvbnQtZXh0cmEtaGVhdnk7XFxuICAgIHNyYzogdXJsKFxcXCIuLi9zcmMvTmFudW1fR290aGljL05hbnVtR290aGljLUV4dHJhQm9sZC50dGZcXFwiKTtcXG59XFxuXFxuLnBhZ2VDb250YWluZXJcXG57XFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiTXktR290aC1Gb250LWhlYXZ5XFxcIjtcXG4gICAgd2lkdGg6IDEwMHZ3O1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDhmcjtcXG4gICAgcGFkZGluZzogMDtcXG5cXG59XFxuLmhlYWRlcntcXG5cXG4gICAgZ3JpZC1jb2x1bW46IDEvMztcXG4gICAgZ3JpZC1yb3c6IDEvMjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzVlZWFkNDtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBwYWRkaW5nOiAxdnc7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnNpZGViYXJ7XFxuICAgIGdyaWQtY29sdW1uOiAxLzI7XFxuICAgIGdyaWQtcm93OiAyLzM7XFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggI2EzYTNhMztcXG4gICAgcGFkZGluZzogMnZ3O1xcbiAgICBmb250LXNpemU6IDEuNWVtO1xcbn1cXG5cXG4ubWFpbkRpc3BsYXl7XFxuICAgIGdyaWQtY29sdW1uOiAyLzM7XFxuICAgIGdyaWQtcm93OiAyLzM7XFxuICAgIHBhZGRpbmctbGVmdDogM3Z3O1xcbn1cXG5cXG4uZGlzcGxheUZvcm1cXG57XFxuICAgIHBhZGRpbmc6IDJ2dztcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmciAyZnI7XFxuXFxuICAgIGdhcDogMTBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcblxcblxcbn1cXG5cXG4uc3VibWlzc2lvbkJ1dHRvblxcbntcXG4gICAgZ3JpZC1jb2x1bW46IDQvNTtcXG5cXG59XFxuXFxuI25vdGVzXFxue1xcbmdyaWQtY29sdW1uOiAyLzU7XFxuXFxufVxcblxcbi50b0RvRGlzcGxheURpdlxcbntcXG4gICAgcGFkZGluZzogMXZ3O1xcblxcbn1cXG5cXG4uc2lkZWJhckl0ZW1cXG57XFxuICAgIG1hcmdpbi1ib3R0b206IDJ2aDtcXG59XFxuXFxuI2FjdGl2ZUdvYWxzOmhvdmVyXFxue1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTVlN2ViO1xcblxcbn1cXG5cXG4ucHJvamVjdEl0ZW06aG92ZXJcXG57XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNWU3ZWI7XFxuXFxufVxcbmxpLnByb2plY3RJdGVte1xcbiAgICBmb250LXNpemU6IDAuOGVtO1xcbiAgICBwYWRkaW5nOiAxdnc7XFxufVxcblxcbi50b0RvRGlzcERpdlxcbntcXG53aWR0aDogOTUlO1xcbnBhZGRpbmc6IDF2dztcXG5kaXNwbGF5OiBncmlkO1xcbmdyaWQtdGVtcGxhdGUtY29sdW1uczogOGZyIDFmciAxZnI7XFxuZ2FwOiAwLjV2dztcXG5ib3JkZXItYm90dG9tOiAjYTNhM2EzIGRvdHRlZCAxcHg7XFxuXFxufVxcblxcbi5jbGVhcmVkVGFza1xcbntcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxuICAgIGNvbG9yOiByZ2JhKDEzOSwgMTMzLCAxMzMsIDAuOCk7XFxufVxcblxcbi5wcm9qZWN0QWRkaXRpb25kaXZcXG57XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDJmciAxZnI7XFxuICAgIGdhcDogMXZ3O1xcbiAgICBtYXJnaW46IDJ2aDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJjb25zdCBUb0RvTGlzdEl0ZW1DcmVhdG9yPSh0aXRsZSxwcmlvcnR5LG5vdGVzLGR1ZURhdGUsZHVlVGltZSxwcm9qZWN0KT0+XG57XG5yZXR1cm57dGl0bGUscHJpb3J0eSxub3RlcyxkdWVEYXRlLGR1ZVRpbWUscHJvamVjdH07XG59XG5cbmV4cG9ydCBjb25zdCBsaXN0T2ZUb0Rvcz1bXTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZU5ld1RvZG9zVG9MaXN0KHRpdGxlLHByaW9ydHksbm90ZXMsZHVlRGF0ZSxkdWVUaW1lLHByb2plY3QpXG57XG4gICAgY29uc3QgbmV3VG9Ebz1Ub0RvTGlzdEl0ZW1DcmVhdG9yKHRpdGxlLHByaW9ydHksbm90ZXMsZHVlRGF0ZSxkdWVUaW1lLHByb2plY3QpO1xuLy8gICAgY29uc29sZS5sb2cobmV3VG9Ebyk7XG4gICAgbGlzdE9mVG9Eb3MucHVzaChuZXdUb0RvKTtcbiAgICAvL2NvbnNvbGUubG9nKGxpc3RPZlRvRG9zKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVRvRG9zKHRpdGxlKVxue1xuICAgIGNvbnN0IHNlYXJjaEluZGV4PWxpc3RPZlRvRG9zLmZpbmRJbmRleCgodG9kbyk9PnRvZG8udGl0bGU9PXRpdGxlKTtcbiAgLy8gIGNvbnNvbGUubG9nKHNlYXJjaEluZGV4KTtcbiAgICBsaXN0T2ZUb0Rvcy5zcGxpY2Uoc2VhcmNoSW5kZXgsMSk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IHByb2plY3RMaXN0PVtdO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvamVjdEl0ZW1zKHByb2plY3QpXG57XG4gICAgY29uc3QgZmlsdGVyZWRMaXN0PWxpc3RPZlRvRG9zLmZpbHRlcih0YXNrPT50YXNrLnByb2plY3Q9PT1wcm9qZWN0KTtcblxuICAgIHJldHVybiBmaWx0ZXJlZExpc3Q7XG5cbn0iLCJpbXBvcnQgeyBkZWxldGVUb0RvcyB9IGZyb20gXCIuL29iamVjdC1jcmVhdG9yXCI7XG5sZXQgZHVwbGljYXRpb25QcmV2ZW50aW9uTG9jYWw9MDtcbi8vZmlyc3QgZnVuY3Rpb24gZHluYW1pY2FsbHkgZGlzcGxheXMgYSBmb3JtIHRvIGNhcHR1cmUgbmV3IHRvZG9zICBcbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5QWRkaXRpb25Gb3JtKHBhcmVudERpdixwcm9qZWN0TGlzdCl7XG4gICAgXG4gICAgY29uc3QgbXlUb0RvRm9ybT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBteVRvRG9Gb3JtLmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXlGb3JtJyk7XG4gICAgXG4gICAgQWRkTGFiZWwoXCJ0aXRsZVwiLFwiIE5ldyBUYXNrOlwiLG15VG9Eb0Zvcm0pO1xuICAgIGNvbnN0IHRpdGxlSW5wdXQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIHRpdGxlSW5wdXQudHlwZT1cInRleHRcIjtcbiAgICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsXCJ0aXRsZVwiKTtcbiAgICB0aXRsZUlucHV0Lm5hbWU9XCJ0aXRsZVwiO1xuICAgIC8vdGl0bGVJbnB1dC52YWx1ZT1cIiBcIjtcbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKHRpdGxlSW5wdXQpO1xuXG4gICAgQWRkTGFiZWwoXCJwcmlvcnR5XCIsXCIgc2VsZWN0IGEgbGV2ZWwgb2YgcHJpb3J0eTpcIixteVRvRG9Gb3JtKTtcbiAgICBjb25zdCBwcmlvcnR5U2V0dGVyPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICAgcHJpb3J0eVNldHRlci5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwicHJpb3J0eVwiKTtcbiAgICBjb25zdCBoaWdoPW5ldyBPcHRpb24oXCJIaWdoXCIsXCJoaWdoXCIpO1xuICAgIGNvbnN0IG1lZGl1bT1uZXcgT3B0aW9uKFwiTWVkaXVtXCIsXCJtZWRpdW1cIik7XG4gICAgY29uc3QgbG93PW5ldyBPcHRpb24oXCJMb3dcIixcImxvd1wiKTtcbiAgICBwcmlvcnR5U2V0dGVyLmFkZChsb3csdW5kZWZpbmVkKTtcbiAgICBwcmlvcnR5U2V0dGVyLmFkZChtZWRpdW0sdW5kZWZpbmVkKTtcbiAgICBwcmlvcnR5U2V0dGVyLmFkZChoaWdoLHVuZGVmaW5lZCk7XG4gICAgbXlUb0RvRm9ybS5hcHBlbmRDaGlsZChwcmlvcnR5U2V0dGVyKTtcblxuICAgIEFkZExhYmVsKFwiZHVlRGF0ZVwiLFwiIER1ZSBEYXRlOiBcIixteVRvRG9Gb3JtKTtcbiAgICBjb25zdCBkdWVEYXRlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBkdWVEYXRlLnR5cGU9XCJkYXRlXCI7XG4gICAgZHVlRGF0ZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwiZHVlRGF0ZVwiKTtcbiAgICBkdWVEYXRlLm5hbWU9XCJkdWVEYXRlXCI7XG4gICAvL2xldCB0b2RheT1uZXcgRGF0ZSgpO1xuICAgZHVlRGF0ZS52YWx1ZT1uZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDEwKTtcbiAgIGR1ZURhdGUuc2V0QXR0cmlidXRlKFwibWluXCIsbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCkpO1xuICAgLy9kdWVEYXRlLnZhbHVlPWAke3RvZGF5LmdldEZ1bGxZZWFyKCl9LSR7KHRvZGF5LmdldE1vbnRoKCkrMSl9LSR7dG9kYXkuZ2V0RGF0ZSgpfWA7XG4gICBcbiAgIG15VG9Eb0Zvcm0uYXBwZW5kQ2hpbGQoZHVlRGF0ZSk7XG5cbiAgICBBZGRMYWJlbChcImR1ZVRpbWVcIixcIkR1ZSB0aW1lOlwiLG15VG9Eb0Zvcm0pO1xuICAgIGNvbnN0IGR1ZVRpbWU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGR1ZVRpbWUudHlwZT1cInRpbWVcIjtcbiAgICBkdWVUaW1lLnNldEF0dHJpYnV0ZShcImlkXCIsXCJkdWVUaW1lXCIpO1xuICAgIGR1ZVRpbWUubmFtZT1cImR1ZVRpbWVcIjtcbiAgICBkdWVUaW1lLmRlZmF1bHRWYWx1ZT1cIjAwOjAwXCI7XG4gICAgbXlUb0RvRm9ybS5hcHBlbmRDaGlsZChkdWVUaW1lKVxuXG5cbiAgICBBZGRMYWJlbChcIm5vdGVzXCIsXCIgQWRkaXRpb25hbCBub3RlczogXCIsbXlUb0RvRm9ybSk7XG4gICAgY29uc3QgYWRkaXRpb25hbE5vdGVzPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiKTtcbiAgICBhZGRpdGlvbmFsTm90ZXMuc2V0QXR0cmlidXRlKFwiaWRcIixcIm5vdGVzXCIpO1xuICAgIGFkZGl0aW9uYWxOb3Rlcy5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsXCJub3Rlc1wiKTtcbiAgICBhZGRpdGlvbmFsTm90ZXMuc2V0QXR0cmlidXRlKFwicm93c1wiLDIpO1xuICAgIGFkZGl0aW9uYWxOb3Rlcy5zZXRBdHRyaWJ1dGUoXCJjb2xzXCIsNTApO1xuICAgIGFkZGl0aW9uYWxOb3Rlcy52YWx1ZT1cIiBcIjtcbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKGFkZGl0aW9uYWxOb3Rlcyk7XG5cbiAgICBBZGRMYWJlbChcInByb2plY3RzXCIsXCJzZWxlY3QgcHJvamVjdDogXCIsbXlUb0RvRm9ybSk7XG4gICAgY29uc3QgcHJvamVjdFNlbGVjdG9yPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG4gICAgcHJvamVjdFNlbGVjdG9yLnNldEF0dHJpYnV0ZShcImlkXCIsXCJwcmpjdFNlbGVjdFwiKTtcbiAgICBjb25zdCBkZWZhdWx0T3B0aW9uPW5ldyBPcHRpb24oXCJubyBwcm9qZWN0XCIsXCJkZWZhdWx0XCIpO1xuICAgIHByb2plY3RTZWxlY3Rvci5hZGQoZGVmYXVsdE9wdGlvbix1bmRlZmluZWQpO1xuXG4gICAgaWYoKHByb2plY3RMaXN0Lmxlbmd0aCk+MClcbiAgICB7XG4gICAgICAgIGZvcihsZXQgaT0wO2k8KHByb2plY3RMaXN0Lmxlbmd0aCk7aSsrKVxuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBuZXdPcHRpb249bmV3IE9wdGlvbihgJHtwcm9qZWN0TGlzdFtpXX1gLGAke3Byb2plY3RMaXN0W2ldfWApO1xuICAgICAgICAgICAgcHJvamVjdFNlbGVjdG9yLmFkZChuZXdPcHRpb24sdW5kZWZpbmVkKTtcblxuICAgICAgICBcbiAgICAgICAgfVxuICAgICAgICBcblxuICAgIH1cbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKHByb2plY3RTZWxlY3RvcilcblxuICAgIGNvbnN0IHN1Ym1pdEJ0dG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBzdWJtaXRCdHRuLnRleHRDb250ZW50PVwiQWRkXCI7XG4gICAgc3VibWl0QnR0bi50eXBlPVwiYnV0dG9uXCI7XG4gICAgc3VibWl0QnR0bi5jbGFzc0xpc3QuYWRkKFwic3VibWlzc2lvbkJ1dHRvblwiKTtcbiAgICBteVRvRG9Gb3JtLmFwcGVuZENoaWxkKHN1Ym1pdEJ0dG4pO1xuICAgIFxuICAgIFxuICAgIFxuICAgIHBhcmVudERpdi5hcHBlbmRDaGlsZChteVRvRG9Gb3JtKTtcbn1cblxuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIERpc3BsYXlUb0RvKHBhcmVudERpdix0b0RvTGlzdClcbntcblxuaWYodG9Eb0xpc3QubGVuZ3RoPT09MClcbntcbiAgICBjb25zdCBpbnRyb0hlYWRlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgaW50cm9IZWFkZXIudGV4dENvbnRlbnQ9XCJZb3UgaGF2ZSBub3RoaW5nIHRvIGRvIHlldCEgQWRkIGEgdGFzayFcIjtcbiAgICBwYXJlbnREaXYuYXBwZW5kQ2hpbGQoaW50cm9IZWFkZXIpOyAgICBcblxufVxuZWxzZXtcbmZvcihsZXQgaT0wO2k8KHRvRG9MaXN0Lmxlbmd0aCk7aSsrKVxue1xuICAgIGNvbnN0IHRvZG9EaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgY29uc3QgdGl0bGU9dG9Eb0xpc3RbaV0udGl0bGU7XG4gICAgdG9kb0Rpdi5jbGFzc0xpc3QuYWRkKFwidG9Eb0Rpc3BEaXZcIik7XG4gICAgdG9kb0Rpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLHRpdGxlKTtcblxuICAgIGNvbnN0IHBhcmFncmFwaE9uZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBwYXJhZ3JhcGh0d289ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBpZigodG9Eb0xpc3RbaV0uZHVlRGF0ZSk9PT0obmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCkpKVxuICAgIHtcbiAgICAgICAgcGFyYWdyYXBoT25lLnRleHRDb250ZW50PVwidG9kYXk6XCI7XG5cbiAgICB9XG5cbiAgICBlbHNlXG4gICAge1xuICAgICAgICBwYXJhZ3JhcGhPbmUudGV4dENvbnRlbnQ9YCR7dG9Eb0xpc3RbaV0uZHVlRGF0ZX06YDtcbiAgICB9XG5cbiAgICBwYXJhZ3JhcGhPbmUudGV4dENvbnRlbnQrPWAgJHt0b0RvTGlzdFtpXS50aXRsZX0gcHJpb3J0eTogJHt0b0RvTGlzdFtpXS5wcmlvcnR5fWA7XG4gICAgaWYoKHRvRG9MaXN0W2ldLmR1ZVRpbWUpIT09XCIwMDowMFwiKVxuICAgIHtcbiAgICAgICAgcGFyYWdyYXBoT25lLnRleHRDb250ZW50Kz1gX19fX19kdWUgYnk6ICR7dG9Eb0xpc3RbaV0uZHVlVGltZX0gbydjbG9ja2A7XG4gICAgfVxuXG4gICAgcGFyYWdyYXBodHdvLnRleHRDb250ZW50PWAgICBBZGRpdGlvbmFsIG5vdGVzOiAke3RvRG9MaXN0W2ldLm5vdGVzfWA7XG5cbiAgICBjb25zdCBjb21wbGV0ZWRCdHRuPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgY29tcGxldGVkQnR0bi5jbGFzc0xpc3QuYWRkKFwicXVlc3RDb21wbGV0ZVwiKTtcbiAgICBjb21wbGV0ZWRCdHRuLnNldEF0dHJpYnV0ZShcImlkXCIsYCR7dG9Eb0xpc3RbaV0udGl0bGV9YCk7XG4gICAgXG4gICAgY29uc3QgY2hlY2tNYXJrPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGNoZWNrTWFyay5zcmM9XCIuL2NoZWNrLW91dGxpbmUucG5nXCI7XG4gICAgY29tcGxldGVkQnR0bi5hcHBlbmRDaGlsZChjaGVja01hcmspO1xuICAgIFxuICAgIGNvbnN0IGRlbGV0ZUJ0dG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBkZWxldGVCdHRuLmNsYXNzTGlzdC5hZGQoXCJxdWVzdGRlbGV0ZVwiKTtcbiAgICBkZWxldGVCdHRuLnNldEF0dHJpYnV0ZShcImlkXCIsYCR7dG9Eb0xpc3RbaV0udGl0bGV9YCk7XG5cbiAgICBjb25zdCBkZWxldGVJY29uPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGRlbGV0ZUljb24uc3JjPScuL2ZpbGUtZG9jdW1lbnQtcmVtb3ZlLnBuZyc7XG4gICAgZGVsZXRlQnR0bi5hcHBlbmRDaGlsZChkZWxldGVJY29uKTtcblxuXG5cbiAgICB0b2RvRGl2LmFwcGVuZENoaWxkKHBhcmFncmFwaE9uZSk7XG4gICAgdG9kb0Rpdi5hcHBlbmRDaGlsZChjb21wbGV0ZWRCdHRuKTtcbiAgICB0b2RvRGl2LmFwcGVuZENoaWxkKGRlbGV0ZUJ0dG4pO1xuICAgIHRvZG9EaXYuYXBwZW5kQ2hpbGQocGFyYWdyYXBodHdvKTtcbiAgICBwYXJlbnREaXYuYXBwZW5kQ2hpbGQodG9kb0Rpdik7XG5cbiAgICBjb21wbGV0ZWRCdHRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCgpPT57XG4gICAgICAgIHRvZG9EaXYuY2xhc3NMaXN0LmFkZChcImNsZWFyZWRUYXNrXCIpO1xuXG4gICAgfSk7XG4gICAgZGVsZXRlQnR0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+XG4gICAge1xuICAgICAgICBkZWxldGVUb0Rvcyh0aXRsZSk7XG4gICAgICAgIHBhcmVudERpdi5yZW1vdmVDaGlsZCh0b2RvRGl2KTtcbiAgICB9XG4gICAgKTtcblxufVxuXG59XG5cblxufVxuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyRGl2Q29udGFpbmVyKGNvbnRhaW5lcil7XG53aGlsZShjb250YWluZXIuZmlyc3RDaGlsZClcbntcbiAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmxhc3RDaGlsZCk7XG5cbn1cblxufVxuXG5cbmZ1bmN0aW9uIEFkZExhYmVsKGlucHV0TmFtZSxkaXNwbGF5VGV4dCxwYXJlbnQpXG57XG4gICAgY29uc3QgbGFiZWw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIGxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLGlucHV0TmFtZSk7XG4gICAgbGFiZWwudGV4dENvbnRlbnQ9ZGlzcGxheVRleHQ7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGxhYmVsKTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gYWRkTmV3UHJvamVjdChwcm9qZWN0TGlzdCxwYXJlbnREaXYscGFyZW50TGlzdERpc3ApXG57XG5pZihkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbD09MCl7XG4gICAgZHVwbGljYXRpb25QcmV2ZW50aW9uTG9jYWwrKztcblxuY29uc3QgYWRkUHJvamVjdERpdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmFkZFByb2plY3REaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RBZGRpdGlvbmRpdlwiKTtcblxuQWRkTGFiZWwoXCJuZXdQcm9qZWN0XCIsXCJuZXcgcHJvamVjdDpcIixhZGRQcm9qZWN0RGl2KTtcbmNvbnN0IHByb2plY3RJbnB1dD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5wcm9qZWN0SW5wdXQudHlwZT1cInRleHRcIjtcbnByb2plY3RJbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLFwibmV3UHJvamVjdFwiKTtcbnByb2plY3RJbnB1dC5uYW1lPVwibmV3UHJvamVjdFwiO1xucHJvamVjdElucHV0LnZhbHVlPVwiIFwiO1xuYWRkUHJvamVjdERpdi5hcHBlbmRDaGlsZChwcm9qZWN0SW5wdXQpO1xuXG5jb25zdCBhZGRQcm9qQnR0bj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuYWRkUHJvakJ0dG4udGV4dENvbnRlbnQ9XCJBZGRcIjtcbmFkZFByb2pCdHRuLnR5cGU9XCJidXR0b25cIjtcbmFkZFByb2pCdHRuLmNsYXNzTGlzdC5hZGQoXCJhZGRpbmdQcm9qZWN0QnRuXCIpO1xuYWRkUHJvamVjdERpdi5hcHBlbmRDaGlsZChhZGRQcm9qQnR0bik7XG5cbnBhcmVudERpdi5hcHBlbmRDaGlsZChhZGRQcm9qZWN0RGl2KTtcblxuYWRkUHJvakJ0dG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PntcbiAgICBpZiAocHJvamVjdElucHV0LnZhbHVlPT09JyAnKVxuICAgIHtcbiAgICAgICAgYWxlcnQoXCJwbGVhc2UgZW50ZXIgYSBuYW1lIGZvciB0aGUgbmV3IHByb2plY3RcIik7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICAgIHByb2plY3RMaXN0LnB1c2gocHJvamVjdElucHV0LnZhbHVlKTtcbiAgICAgICAgY29uc29sZS5sb2cocHJvamVjdExpc3QpO1xuICAgICAgICBkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbD0wO1xuICAgICAgICBkaXNwbGF5U2lkZUJhclByb2plY3RzKHByb2plY3RMaXN0LHBhcmVudExpc3REaXNwLHBhcmVudERpdik7XG4gICAgICAgIHBhcmVudERpdi5yZW1vdmVDaGlsZChhZGRQcm9qZWN0RGl2KTtcblxuICAgIH1cbn0pO1xuXG59XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5U2lkZUJhclByb2plY3RzKHByb2plY3RMaXN0LHBhcmVudCxtYWluRGlzcClcbntcbiAgICBjbGVhckRpdkNvbnRhaW5lcihwYXJlbnQpO1xuICAgIGlmKChwcm9qZWN0TGlzdC5sZW5ndGgpIT09MCl7XG5mb3IobGV0IGk9MDtpPChwcm9qZWN0TGlzdC5sZW5ndGgpO2krKylcbntcbiAgICBjb25zdCBwcm9qZWN0SXRlbT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgcHJvamVjdEl0ZW0uY2xhc3NMaXN0LmFkZChcInByb2plY3RJdGVtXCIpO1xuICAgIHByb2plY3RJdGVtLnNldEF0dHJpYnV0ZShcImlkXCIscHJvamVjdExpc3RbaV0pO1xuICAgIHByb2plY3RJdGVtLnRleHRDb250ZW50PXByb2plY3RMaXN0W2ldO1xuICAgIGNvbnNvbGUubG9nKHByb2plY3RJdGVtKTtcblxuICAgIHBhcmVudC5hcHBlbmRDaGlsZChwcm9qZWN0SXRlbSk7XG5cbnByb2plY3RJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e2NvbnNvbGUubG9nKHByb2plY3RJdGVtWydpZCddKX0pO1xufX1cbmNvbnN0IHByb2plY3RBZGRlcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIilcbnByb2plY3RBZGRlci5jbGFzc0xpc3QuYWRkKFwicHJvamVjdEl0ZW1cIik7XG5wcm9qZWN0QWRkZXIuY2xhc3NMaXN0LmFkZChcInNpZGViYXJJdGVtXCIpO1xucHJvamVjdEFkZGVyLnNldEF0dHJpYnV0ZShcImlkXCIsXCJwcm9qZWN0QWRkaXRpb25cIik7XG5wcm9qZWN0QWRkZXIudGV4dENvbnRlbnQ9XCJBZGQgbmV3IFByb2plY3QgICtcIjtcbnBhcmVudC5hcHBlbmRDaGlsZChwcm9qZWN0QWRkZXIpO1xucHJvamVjdEFkZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgIGFkZE5ld1Byb2plY3QocHJvamVjdExpc3QsbWFpbkRpc3AscGFyZW50KX0pO1xuXG59XG4iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7dXBkYXRlTmV3VG9kb3NUb0xpc3QsbGlzdE9mVG9Eb3MscHJvamVjdExpc3QsZ2V0UHJvamVjdEl0ZW1zfSBmcm9tIFwiLi9vYmplY3QtY3JlYXRvclwiO1xuaW1wb3J0e2Rpc3BsYXlBZGRpdGlvbkZvcm0sRGlzcGxheVRvRG8sY2xlYXJEaXZDb250YWluZXIsYWRkTmV3UHJvamVjdCxkaXNwbGF5U2lkZUJhclByb2plY3RzfSBmcm9tIFwiLi9kaXYtbWFuaXB1bGF0aW9uc1wiO1xuXG5sZXQgZHVwbGljYXRpb25QcmV2ZW50aW9uPTA7IFxuXG5jb25zdCBtYWluRGlzcGxheT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1haW5EaXNwbGF5XCIpO1xuY29uc3QgdG9kb0FkZGJ0bj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFkZFRvRG9zXCIpO1xuXG5jb25zdCBkaXNwbGF5ZWRQcm9qZWN0cz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RMaXN0XCIpO1xuXG5kaXNwbGF5U2lkZUJhclByb2plY3RzKHByb2plY3RMaXN0LGRpc3BsYXllZFByb2plY3RzKTtcblxuRGlzcGxheVRvRG8obWFpbkRpc3BsYXksbGlzdE9mVG9Eb3MpO1xuXG50b2RvQWRkYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICBpZihkdXBsaWNhdGlvblByZXZlbnRpb249PT0wKVxuICB7XG4gICAgZHVwbGljYXRpb25QcmV2ZW50aW9uKys7XG4gICAgZGlzcGxheUFkZGl0aW9uRm9ybShtYWluRGlzcGxheSxwcm9qZWN0TGlzdCk7XG4gIH1cbiAgY29uc3Qgc3VibWl0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc3VibWlzc2lvbkJ1dHRvblwiKTtcbiAgc3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgIGlmKCEoKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIikpLnZhbHVlKSlcbiAgICB7YWxlcnQoXCJwbGVhc2UgZW50ZXIgYSB0YXNrXCIpO31cbmVsc2VcbntcbiAgICBpZigoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3Rlc1wiKS52YWx1ZSk9PT1cIiBcIilcbiAgICB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5vdGVzXCIpLnZhbHVlPVwibm9uZVwiO1xuICAgIH1cblxuICAgIC8vIGlmKCEoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkdWVEYXRlXCIpLnZhbHVlKSlcbiAgICAvLyB7XG4gICAgLy8gICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImR1ZURhdGVcIikudmFsdWU9XCJ0b2RheVwiO1xuICAgIC8vIH1cblxuICAgIHVwZGF0ZU5ld1RvZG9zVG9MaXN0KChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlKSxcbiAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmlvcnR5XCIpLnZhbHVlKSxcbiAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3Rlc1wiKS52YWx1ZSksXG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHVlRGF0ZVwiKS52YWx1ZSksXG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHVlVGltZVwiKS52YWx1ZSksXG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJqY3RTZWxlY3RcIikudmFsdWUpKTtcbiAgICBjbGVhckRpdkNvbnRhaW5lcihtYWluRGlzcGxheSk7XG4gICAgRGlzcGxheVRvRG8obWFpbkRpc3BsYXksbGlzdE9mVG9Eb3MpO1xuICAgIGR1cGxpY2F0aW9uUHJldmVudGlvbj0wO1xuICB9ICAgIFxufSk7XG5cbn0pO1xuXG5jb25zdCBhY3RpdmVHb2Fsc0J0dG49ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhY3RpdmVHb2Fsc1wiKTtcblxuYWN0aXZlR29hbHNCdHRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICBcbiAgY2xlYXJEaXZDb250YWluZXIobWFpbkRpc3BsYXkpO1xuICBEaXNwbGF5VG9EbyhtYWluRGlzcGxheSxsaXN0T2ZUb0Rvcyk7XG59KTtcblxuY29uc3QgUHJvamVjdFNldD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RMaXN0XCIpO1xuXG5kaXNwbGF5U2lkZUJhclByb2plY3RzKHByb2plY3RMaXN0LFByb2plY3RTZXQsbWFpbkRpc3BsYXkpO1xuXG4vLyBTaWRlYmFyQnR0bnMuZm9yRWFjaChidHRuPT5idHRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuLy8gICBpZihidHRuWydpZCddPT09J2FjdGl2ZUdvYWxzJylcbi8vICAgICB7XG4gICAgIFxuLy8gICAgIH1cblxuLy8gICAgIGVsc2UgaWYoKGJ0dG5bJ2lkJ10pPT09J3Byb2plY3RBZGRpdGlvbicpe1xuLy8gICAgICAgY2xlYXJEaXZDb250YWluZXIobWFpbkRpc3BsYXkpO1xuLy8gICAgICAgYWRkTmV3UHJvamVjdChwcm9qZWN0TGlzdCxtYWluRGlzcGxheSk7XG4vLyAgICAgICBkaXNwbGF5U2lkZUJhclByb2plY3RzKHByb2plY3RMaXN0LGRpc3BsYXllZFByb2plY3RzKTtcbi8vICAgICAgIH1cblxuLy8gICBlbHNlXG4vLyAgIHtcblxuXG4vLyAgIH1cbi8vIH0pKTtcblxuXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzJfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwibGlzdE9mVG9Eb3MiLCJkZWxldGVUb0RvcyIsInRpdGxlIiwic2VhcmNoSW5kZXgiLCJmaW5kSW5kZXgiLCJ0b2RvIiwicHJvamVjdExpc3QiLCJkdXBsaWNhdGlvblByZXZlbnRpb25Mb2NhbCIsIkRpc3BsYXlUb0RvIiwicGFyZW50RGl2IiwidG9Eb0xpc3QiLCJpbnRyb0hlYWRlciIsInRleHRDb250ZW50IiwidG9kb0RpdiIsImNsYXNzTGlzdCIsImFkZCIsInBhcmFncmFwaE9uZSIsInBhcmFncmFwaHR3byIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInN1YnN0cmluZyIsImR1ZURhdGUiLCJwcmlvcnR5IiwiZHVlVGltZSIsIm5vdGVzIiwiY29tcGxldGVkQnR0biIsImNoZWNrTWFyayIsImRlbGV0ZUJ0dG4iLCJkZWxldGVJY29uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsZWFyRGl2Q29udGFpbmVyIiwiY29udGFpbmVyIiwibGFzdENoaWxkIiwiQWRkTGFiZWwiLCJpbnB1dE5hbWUiLCJkaXNwbGF5VGV4dCIsInBhcmVudCIsImxhYmVsIiwiZGlzcGxheVNpZGVCYXJQcm9qZWN0cyIsIm1haW5EaXNwIiwicHJvamVjdEl0ZW0iLCJjb25zb2xlIiwibG9nIiwicHJvamVjdEFkZGVyIiwicGFyZW50TGlzdERpc3AiLCJhZGRQcm9qZWN0RGl2IiwicHJvamVjdElucHV0IiwidHlwZSIsIm5hbWUiLCJ2YWx1ZSIsImFkZFByb2pCdHRuIiwiYWxlcnQiLCJhZGROZXdQcm9qZWN0IiwiZHVwbGljYXRpb25QcmV2ZW50aW9uIiwibWFpbkRpc3BsYXkiLCJ0b2RvQWRkYnRuIiwiZGlzcGxheWVkUHJvamVjdHMiLCJteVRvRG9Gb3JtIiwidGl0bGVJbnB1dCIsInByaW9ydHlTZXR0ZXIiLCJoaWdoIiwiT3B0aW9uIiwibWVkaXVtIiwibG93IiwiZGVmYXVsdFZhbHVlIiwiYWRkaXRpb25hbE5vdGVzIiwicHJvamVjdFNlbGVjdG9yIiwiZGVmYXVsdE9wdGlvbiIsIm5ld09wdGlvbiIsInN1Ym1pdEJ0dG4iLCJkaXNwbGF5QWRkaXRpb25Gb3JtIiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9qZWN0IiwibmV3VG9EbyIsIlRvRG9MaXN0SXRlbUNyZWF0b3IiLCJ1cGRhdGVOZXdUb2Rvc1RvTGlzdCIsIlByb2plY3RTZXQiXSwic291cmNlUm9vdCI6IiJ9