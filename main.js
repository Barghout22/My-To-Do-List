(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>g});var o=n(537),r=n.n(o),i=n(645),a=n.n(i),d=n(667),c=n.n(d),s=new URL(n(605),n.b),l=new URL(n(618),n.b),A=new URL(n(601),n.b),u=a()(r()),p=c()(s),m=c()(l),f=c()(A);u.push([e.id,"@font-face{\n    font-family: My-Goth-Font;\n    src: url("+p+");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("+m+");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("+f+');\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/5;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.projectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.projectItem{\n    font-size: 0.8em;\n    padding: 1vw;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}\n\n.projectAdditiondiv\n{\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    gap: 1vw;\n    margin: 2vh;\n    text-align: center;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,4CAAuD;AAC3D;AACA;IACI,+BAA+B;IAC/B,4CAAoD;AACxD;;AAEA;IACI,qCAAqC;IACrC,4CAAyD;AAC7D;;AAEA;;IAEI,iCAAiC;IACjC,YAAY;IACZ,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,UAAU;;AAEd;AACA;;IAEI,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,2BAA2B;IAC3B,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;IACZ,aAAa;IACb,sCAAsC;IACtC,+BAA+B;;IAE/B,SAAS;IACT,kBAAkB;;;AAGtB;;AAEA;;IAEI,gBAAgB;;AAEpB;;AAEA;;AAEA,gBAAgB;;AAEhB;;AAEA;;IAEI,YAAY;;AAEhB;;AAEA;;IAEI,kBAAkB;AACtB;;AAEA;;IAEI,yBAAyB;;AAE7B;;AAEA;;IAEI,yBAAyB;;AAE7B;AACA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;;AAEA,UAAU;AACV,YAAY;AACZ,aAAa;AACb,kCAAkC;AAClC,UAAU;AACV,iCAAiC;;AAEjC;;AAEA;;IAEI,6BAA6B;IAC7B,+BAA+B;AACnC;;AAEA;;IAEI,UAAU;IACV,aAAa;IACb,kCAAkC;IAClC,QAAQ;IACR,WAAW;IACX,kBAAkB;AACtB",sourcesContent:['@font-face{\n    font-family: My-Goth-Font;\n    src: url("../src/Nanum_Gothic/NanumGothic-Regular.ttf");\n}\n@font-face{\n    font-family: My-Goth-Font-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-Bold.ttf");\n}\n\n@font-face{\n    font-family: My-Goth-Font-extra-heavy;\n    src: url("../src/Nanum_Gothic/NanumGothic-ExtraBold.ttf");\n}\n\n.pageContainer\n{\n    font-family: "My-Goth-Font-heavy";\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr;\n    padding: 0;\n\n}\n.header{\n\n    grid-column: 1/3;\n    grid-row: 1/2;\n    background-color: #5eead4;\n    align-self: center;\n    padding: 1vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.sidebar{\n    grid-column: 1/2;\n    grid-row: 2/3;\n    box-shadow: 1px 1px #a3a3a3;\n    padding: 2vw;\n    font-size: 1.5em;\n}\n\n.mainDisplay{\n    grid-column: 2/3;\n    grid-row: 2/3;\n    padding-left: 3vw;\n}\n\n.displayForm\n{\n    padding: 2vw;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 1fr 1fr 2fr;\n\n    gap: 10px;\n    text-align: center;\n\n\n}\n\n.submissionButton\n{\n    grid-column: 4/5;\n\n}\n\n#notes\n{\ngrid-column: 2/5;\n\n}\n\n.toDoDisplayDiv\n{\n    padding: 1vw;\n\n}\n\n.sidebarItem\n{\n    margin-bottom: 2vh;\n}\n\n#activeGoals:hover\n{\n    background-color: #e5e7eb;\n\n}\n\n.projectItem:hover\n{\n    background-color: #e5e7eb;\n\n}\nli.projectItem{\n    font-size: 0.8em;\n    padding: 1vw;\n}\n\n.toDoDispDiv\n{\nwidth: 95%;\npadding: 1vw;\ndisplay: grid;\ngrid-template-columns: 8fr 1fr 1fr;\ngap: 0.5vw;\nborder-bottom: #a3a3a3 dotted 1px;\n\n}\n\n.clearedTask\n{\n    text-decoration: line-through;\n    color: rgba(139, 133, 133, 0.8);\n}\n\n.projectAdditiondiv\n{\n    width: 90%;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    gap: 1vw;\n    margin: 2vh;\n    text-align: center;\n}'],sourceRoot:""}]);const g=u},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var u=n(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=d,t.splice(d,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=n(i[a]);t[d].references--}for(var c=o(e,r),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},618:(e,t,n)=>{e.exports=n.p+"6499af72b1d61fe8269d.ttf"},601:(e,t,n)=>{e.exports=n.p+"d574713406e9230ba246.ttf"},605:(e,t,n)=>{e.exports=n.p+"6c84540de7730f833d6c.ttf"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),i=n(569),a=n.n(i),d=n(565),c=n.n(d),s=n(216),l=n.n(s),A=n(589),u=n.n(A),p=n(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=[];function g(e){const t=f.findIndex((t=>t.title==e));f.splice(t,1)}const h=[];let v=0;function C(e,t){if(0===t.length){const t=document.createElement("h3");t.textContent="You have nothing to do yet! Add a task!",e.appendChild(t)}else for(let n=0;n<t.length;n++){const o=document.createElement("div"),r=t[n].title;o.classList.add("toDoDispDiv"),o.setAttribute("id",r);const i=document.createElement("div"),a=document.createElement("div");t[n].dueDate===(new Date).toISOString().substring(0,10)?i.textContent="today:":i.textContent=`${t[n].dueDate}:`,i.textContent+=` ${t[n].title} priorty: ${t[n].priorty}`,"00:00"!==t[n].dueTime&&(i.textContent+=`_____due by: ${t[n].dueTime} o'clock`),a.textContent=`   Additional notes: ${t[n].notes}`;const d=document.createElement("button");d.classList.add("questComplete"),d.setAttribute("id",`${t[n].title}`);const c=document.createElement("img");c.src="./check-outline.png",d.appendChild(c);const s=document.createElement("button");s.classList.add("questdelete"),s.setAttribute("id",`${t[n].title}`);const l=document.createElement("img");l.src="./file-document-remove.png",s.appendChild(l),o.appendChild(i),o.appendChild(d),o.appendChild(s),o.appendChild(a),e.appendChild(o),d.addEventListener("click",(()=>{o.classList.add("clearedTask")})),s.addEventListener("click",(()=>{g(r),e.removeChild(o)}))}}function y(e){for(;e.firstChild;)e.removeChild(e.lastChild)}function b(e,t,n){const o=document.createElement("label");o.setAttribute("for",e),o.textContent=t,n.appendChild(o)}function I(e,t,n){if(y(t),0!==e.length)for(let o=0;o<e.length;o++){const r=document.createElement("li");r.classList.add("projectItem"),r.setAttribute("id",e[o]),r.textContent=e[o],t.appendChild(r),r.addEventListener("click",(()=>{const e=(t=r.id,f.filter((e=>e.project===t)));var t;y(n),C(n,e)}))}const o=document.createElement("li");o.classList.add("projectItem"),o.classList.add("sidebarItem"),o.setAttribute("id","projectAddition"),o.textContent="Add new Project  +",t.appendChild(o),o.addEventListener("click",(()=>{!function(e,t,n){if(0==v){v++;const o=document.createElement("div");o.classList.add("projectAdditiondiv"),b("newProject","new project:",o);const r=document.createElement("input");r.type="text",r.setAttribute("id","newProject"),r.name="newProject",r.value=" ",o.appendChild(r);const i=document.createElement("button");i.textContent="Add",i.type="button",i.classList.add("addingProjectBtn"),o.appendChild(i),t.appendChild(o),i.addEventListener("click",(()=>{" "===r.value?alert("please enter a name for the new project"):(e.push(r.value),v=0,I(e,n,t),t.removeChild(o))}))}}(e,n,t)}))}let B=0;const E=document.querySelector(".mainDisplay"),w=document.querySelector(".addToDos"),x=document.querySelector(".projectList");I(h,x),C(E,f),w.addEventListener("click",(()=>{0===B&&(B++,function(e,t){const n=document.createElement("div");n.classList.add("displayForm"),b("title"," New Task:",n);const o=document.createElement("input");o.type="text",o.setAttribute("id","title"),o.name="title",n.appendChild(o),b("priorty"," select a level of priorty:",n);const r=document.createElement("select");r.setAttribute("id","priorty");const i=new Option("High","high"),a=new Option("Medium","medium"),d=new Option("Low","low");r.add(d,void 0),r.add(a,void 0),r.add(i,void 0),n.appendChild(r),b("dueDate"," Due Date: ",n);const c=document.createElement("input");c.type="date",c.setAttribute("id","dueDate"),c.name="dueDate",c.value=(new Date).toISOString().substring(0,10),c.setAttribute("min",(new Date).toISOString().substring(0,10)),n.appendChild(c),b("dueTime","Due time:",n);const s=document.createElement("input");s.type="time",s.setAttribute("id","dueTime"),s.name="dueTime",s.defaultValue="00:00",n.appendChild(s),b("notes"," Additional notes: ",n);const l=document.createElement("textarea");l.setAttribute("id","notes"),l.setAttribute("name","notes"),l.setAttribute("rows",2),l.setAttribute("cols",50),l.value=" ",n.appendChild(l),b("projects","select project: ",n);const A=document.createElement("select");A.setAttribute("id","prjctSelect");const u=new Option("no project","default");if(A.add(u,void 0),t.length>0)for(let e=0;e<t.length;e++){const n=new Option(`${t[e]}`,`${t[e]}`);A.add(n,void 0)}n.appendChild(A);const p=document.createElement("button");p.textContent="Add",p.type="button",p.classList.add("submissionButton"),n.appendChild(p),e.appendChild(n)}(E,h)),document.querySelector(".submissionButton").addEventListener("click",(()=>{document.getElementById("title").value?(" "===document.getElementById("notes").value&&(document.getElementById("notes").value="none"),function(e,t,n,o,r,i){const a=((e,t,n,o,r,i)=>({title:e,priorty:t,notes:n,dueDate:o,dueTime:r,project:i}))(document.getElementById("title").value,document.getElementById("priorty").value,document.getElementById("notes").value,document.getElementById("dueDate").value,document.getElementById("dueTime").value,document.getElementById("prjctSelect").value);f.push(a)}(),y(E),C(E,f),B=0):alert("please enter a task")}))})),document.querySelector("#activeGoals").addEventListener("click",(()=>{y(E),C(E,f)}));const j=document.querySelector(".projectList");I(h,j,E)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,